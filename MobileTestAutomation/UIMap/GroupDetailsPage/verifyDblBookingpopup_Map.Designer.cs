// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.GroupDetailsPage.verifyDblBookingpopup_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class verifyDblBookingpopup_Map:logWriter
    {
        
        /// <summary>
        /// verifyDblBookingpopup_Method - Use 'verifyDblBookingpopup_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public Boolean verifyDblBookingpopup_Method()
        {
            #region Variable Declarations
            HtmlDiv uIAnotherBookingFoundPane = this.UIVillaPlusGroupDetailWindow.UIVillaPlusGroupDetailDocument.UIGrpDetailsPopUpCustom.UIAnotherBookingFoundPane;
            #endregion
            Boolean IsDblBookingPopupOpened = false;
            string txtFrmPage = uIAnotherBookingFoundPane.InnerText;
            txtFrmPage = txtFrmPage.Replace("\r\n", "");
            txtFrmPage = txtFrmPage.Replace(" ", string.Empty);
            string ExpTxt = "AnotherBookingFound";
            try
            {
                StringAssert.Contains(txtFrmPage.Trim(), ExpTxt.Trim());
                IsDblBookingPopupOpened = true;
                WriteLogs("INFO : \"Another Booking Found\" Popup is Opened.");
            }
            catch (Exception)
            {
                WriteLogs("INFO : Could Not Open \"Another Booking Found\" Popup.");
            }
            return IsDblBookingPopupOpened;
        }

        #region Properties
        public virtual verifyDblBookingpopup_MethodExpectedValues verifyDblBookingpopup_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyDblBookingpopup_MethodExpectedValues == null))
                {
                    this.mverifyDblBookingpopup_MethodExpectedValues = new verifyDblBookingpopup_MethodExpectedValues();
                }
                return this.mverifyDblBookingpopup_MethodExpectedValues;
            }
        }
        
        public UIVillaPlusGroupDetailWindow UIVillaPlusGroupDetailWindow
        {
            get
            {
                if ((this.mUIVillaPlusGroupDetailWindow == null))
                {
                    this.mUIVillaPlusGroupDetailWindow = new UIVillaPlusGroupDetailWindow();
                }
                return this.mUIVillaPlusGroupDetailWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyDblBookingpopup_MethodExpectedValues mverifyDblBookingpopup_MethodExpectedValues;
        
        private UIVillaPlusGroupDetailWindow mUIVillaPlusGroupDetailWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyDblBookingpopup_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class verifyDblBookingpopup_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Another Booking Found' pane equals 'Another Booking Found'
        /// </summary>
        public string UIAnotherBookingFoundPaneInnerText = "Another Booking Found";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVillaPlusGroupDetailWindow : BrowserWindow
    {
        
        public UIVillaPlusGroupDetailWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Plus | Group Details");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPlusGroupDetailDocument UIVillaPlusGroupDetailDocument
        {
            get
            {
                if ((this.mUIVillaPlusGroupDetailDocument == null))
                {
                    this.mUIVillaPlusGroupDetailDocument = new UIVillaPlusGroupDetailDocument(this);
                }
                return this.mUIVillaPlusGroupDetailDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusGroupDetailDocument mUIVillaPlusGroupDetailDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVillaPlusGroupDetailDocument : HtmlDocument
    {
        
        public UIVillaPlusGroupDetailDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "book";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/booking/", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/booking/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus | Group Details");
            #endregion
        }
        
        #region Properties
        public UIGrpDetailsPopUpCustom UIGrpDetailsPopUpCustom
        {
            get
            {
                if ((this.mUIGrpDetailsPopUpCustom == null))
                {
                    this.mUIGrpDetailsPopUpCustom = new UIGrpDetailsPopUpCustom(this);
                }
                return this.mUIGrpDetailsPopUpCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpDetailsPopUpCustom mUIGrpDetailsPopUpCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpDetailsPopUpCustom : HtmlCustom
    {
        
        public UIGrpDetailsPopUpCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "SECTION";
            this.SearchProperties["Id"] = "GrpDetailsPopUp";
            this.FilterProperties["Class"] = "infoBoxContent lightbox grpdetailsdocked-top";
            this.FilterProperties["ControlDefinition"] = "class=\"infoBoxContent lightbox grpdetail";
            this.WindowTitles.Add("Villa Plus | Group Details");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAnotherBookingFoundPane
        {
            get
            {
                if ((this.mUIAnotherBookingFoundPane == null))
                {
                    this.mUIAnotherBookingFoundPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAnotherBookingFoundPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Another Booking Found";
                    this.mUIAnotherBookingFoundPane.WindowTitles.Add("Villa Plus | Group Details");
                    #endregion
                }
                return this.mUIAnotherBookingFoundPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAnotherBookingFoundPane;
        #endregion
    }
}
