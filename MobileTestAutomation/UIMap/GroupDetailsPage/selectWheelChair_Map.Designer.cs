// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.GroupDetailsPage.selectWheelChair_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class selectWheelChair_Map:logWriter
    {
        
        /// <summary>
        /// selectWheelChair_Method - Use 'selectWheelChair_MethodParams' to pass parameters into this method.
        /// </summary>
        public bool selectWheelChair_Method()
        {
            #region Variable Declarations
            HtmlCheckBox uIGroupDetailsData0VilCheckBox = this.UIVillaPlusGroupDetailWindow.UIVillaPlusGroupDetailDocument.UIGroupDetailsData0VilCheckBox;
            #endregion
            bool IsWheelChairSelected = false;
            try
            {
                UITestControlCollection ui = uIGroupDetailsData0VilCheckBox.FindMatchingControls();
                foreach (HtmlCheckBox chkbox in ui)
                {
                    chkbox.Checked = this.selectWheelChair_MethodParams.UIGroupDetailsData0VilCheckBoxChecked;
                    Keyboard.SendKeys("{PGDN}");
                }
                IsWheelChairSelected = true;
                WriteLogs("PASS : WheelChair is Selected.");
            }
            catch (Exception)
            {
                WriteLogs("INFO : Could not Select WheelChair.");
            }
            return IsWheelChairSelected;          
        }
        
        #region Properties
        public virtual selectWheelChair_MethodParams selectWheelChair_MethodParams
        {
            get
            {
                if ((this.mselectWheelChair_MethodParams == null))
                {
                    this.mselectWheelChair_MethodParams = new selectWheelChair_MethodParams();
                }
                return this.mselectWheelChair_MethodParams;
            }
        }
        
        public UIVillaPlusGroupDetailWindow UIVillaPlusGroupDetailWindow
        {
            get
            {
                if ((this.mUIVillaPlusGroupDetailWindow == null))
                {
                    this.mUIVillaPlusGroupDetailWindow = new UIVillaPlusGroupDetailWindow();
                }
                return this.mUIVillaPlusGroupDetailWindow;
            }
        }
        #endregion
        
        #region Fields
        private selectWheelChair_MethodParams mselectWheelChair_MethodParams;
        
        private UIVillaPlusGroupDetailWindow mUIVillaPlusGroupDetailWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'selectWheelChair_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class selectWheelChair_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'GroupDetailsData[0].VillaAsstRequired' check box
        /// </summary>
        public bool UIGroupDetailsData0VilCheckBoxChecked = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVillaPlusGroupDetailWindow : BrowserWindow
    {
        
        public UIVillaPlusGroupDetailWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Plus | Group Details");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPlusGroupDetailDocument UIVillaPlusGroupDetailDocument
        {
            get
            {
                if ((this.mUIVillaPlusGroupDetailDocument == null))
                {
                    this.mUIVillaPlusGroupDetailDocument = new UIVillaPlusGroupDetailDocument(this);
                }
                return this.mUIVillaPlusGroupDetailDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusGroupDetailDocument mUIVillaPlusGroupDetailDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVillaPlusGroupDetailDocument : HtmlDocument
    {
        
        public UIVillaPlusGroupDetailDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "book";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/booking/group-details";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/booking/group-details", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus | Group Details");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIGroupDetailsData0VilCheckBox
        {
            get
            {
                if ((this.mUIGroupDetailsData0VilCheckBox == null))
                {
                    this.mUIGroupDetailsData0VilCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIGroupDetailsData0VilCheckBox.SearchProperties.Add(new PropertyExpression(HtmlCheckBox.PropertyNames.Id, "chkVillaAsst_", PropertyExpressionOperator.Contains));
                    this.mUIGroupDetailsData0VilCheckBox.SearchProperties.Add(new PropertyExpression(HtmlCheckBox.PropertyNames.Name, ".VillaAsstRequired", PropertyExpressionOperator.Contains));
                    this.mUIGroupDetailsData0VilCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = "MobReqCheckbox";
                    this.mUIGroupDetailsData0VilCheckBox.FilterProperties.Add(new PropertyExpression(HtmlCheckBox.PropertyNames.ControlDefinition, "name=\"GroupDetailsData", PropertyExpressionOperator.Contains));
                    this.mUIGroupDetailsData0VilCheckBox.WindowTitles.Add("Villa Plus | Group Details");
                    #endregion
                }
                return this.mUIGroupDetailsData0VilCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIGroupDetailsData0VilCheckBox;
        #endregion
    }
}
