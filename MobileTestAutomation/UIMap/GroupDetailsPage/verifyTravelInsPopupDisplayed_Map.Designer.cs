// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.GroupDetailsPage.verifyTravelInsPopupDisplayed_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class verifyTravelInsPopupDisplayed_Map:logWriter
    {
        
        /// <summary>
        /// verifyTravelInsPopupDisplayed_Method - Use 'verifyTravelInsPopupDisplayed_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public Boolean verifyTravelInsPopupDisplayed_Method(bool IsInsuranceSelected)
        {
            #region Variable Declarations
            HtmlDiv uITravelInsurancePane = this.UIVillaPlusGroupDetailWindow.UIVillaPlusGroupDetailDocument.UIGrpDetailsPopUpCustom.UITravelInsurancePane;
            #endregion
            Boolean IsTrvINSPopupDisplayed = false;
            try
            {
                IsTrvINSPopupDisplayed = uITravelInsurancePane.TryFind();
                StringAssert.Contains(uITravelInsurancePane.InnerText, this.verifyTravelInsPopupDisplayed_MethodExpectedValues.UITravelInsurancePaneInnerText);
                WriteLogs("PASS : \"Travel Insurance\" Popup Dispalyed on GD Page.");
            }
            catch (Exception)
            {
                WriteLogs("FAIL : \"Travel Insurance\" Popup is Not Displayed on GD Page.");
            }
            return IsTrvINSPopupDisplayed;
        }
        
        #region Properties
        public virtual verifyTravelInsPopupDisplayed_MethodExpectedValues verifyTravelInsPopupDisplayed_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyTravelInsPopupDisplayed_MethodExpectedValues == null))
                {
                    this.mverifyTravelInsPopupDisplayed_MethodExpectedValues = new verifyTravelInsPopupDisplayed_MethodExpectedValues();
                }
                return this.mverifyTravelInsPopupDisplayed_MethodExpectedValues;
            }
        }
        
        public UIVillaPlusGroupDetailWindow UIVillaPlusGroupDetailWindow
        {
            get
            {
                if ((this.mUIVillaPlusGroupDetailWindow == null))
                {
                    this.mUIVillaPlusGroupDetailWindow = new UIVillaPlusGroupDetailWindow();
                }
                return this.mUIVillaPlusGroupDetailWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyTravelInsPopupDisplayed_MethodExpectedValues mverifyTravelInsPopupDisplayed_MethodExpectedValues;
        
        private UIVillaPlusGroupDetailWindow mUIVillaPlusGroupDetailWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyTravelInsPopupDisplayed_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class verifyTravelInsPopupDisplayed_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Travel Insurance' pane equals 'Travel Insurance'
        /// </summary>
        public string UITravelInsurancePaneInnerText = "Travel Insurance";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaPlusGroupDetailWindow : BrowserWindow
    {
        
        public UIVillaPlusGroupDetailWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus | Group Details", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Plus | Group Details");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPlusGroupDetailDocument UIVillaPlusGroupDetailDocument
        {
            get
            {
                if ((this.mUIVillaPlusGroupDetailDocument == null))
                {
                    this.mUIVillaPlusGroupDetailDocument = new UIVillaPlusGroupDetailDocument(this);
                }
                return this.mUIVillaPlusGroupDetailDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusGroupDetailDocument mUIVillaPlusGroupDetailDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaPlusGroupDetailDocument : HtmlDocument
    {
        
        public UIVillaPlusGroupDetailDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "book";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus | Group Details", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/booking/group-details", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/booking/group-details", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus | Group Details");
            #endregion
        }
        
        #region Properties
        public UIGrpDetailsPopUpCustom UIGrpDetailsPopUpCustom
        {
            get
            {
                if ((this.mUIGrpDetailsPopUpCustom == null))
                {
                    this.mUIGrpDetailsPopUpCustom = new UIGrpDetailsPopUpCustom(this);
                }
                return this.mUIGrpDetailsPopUpCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpDetailsPopUpCustom mUIGrpDetailsPopUpCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGrpDetailsPopUpCustom : HtmlCustom
    {
        
        public UIGrpDetailsPopUpCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "SECTION";
            this.SearchProperties["Id"] = "GrpDetailsPopUp";
            this.FilterProperties["Class"] = "infoBoxContent lightbox grpdetailsdocked-top";
            this.FilterProperties["ControlDefinition"] = "class=\"infoBoxContent lightbox grpdetail";
            this.WindowTitles.Add("Villa Plus | Group Details");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UITravelInsurancePane
        {
            get
            {
                if ((this.mUITravelInsurancePane == null))
                {
                    this.mUITravelInsurancePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUITravelInsurancePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Travel Insurance";
                    this.mUITravelInsurancePane.WindowTitles.Add("Villa Plus | Group Details");
                    #endregion
                }
                return this.mUITravelInsurancePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUITravelInsurancePane;
        #endregion
    }
}
