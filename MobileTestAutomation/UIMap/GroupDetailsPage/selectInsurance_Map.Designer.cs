// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.GroupDetailsPage.selectInsurance_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class selectInsurance_Map:logWriter
    {
        
        /// <summary>
        /// selectInsurance_Method - Use 'selectInsurance_MethodParams' to pass parameters into this method.
        /// </summary>
        public bool selectInsurance_Method()
        {
            #region Variable Declarations
            HtmlComboBox uIGroupDetailsData0InsComboBox = this.UIVillaPlusGroupDetailWindow.UIVillaPlusGroupDetailDocument.UIGroupDetailsData0InsComboBox;
            #endregion
            bool IsInsuranceSelected = false;
            try
            {
                UITestControlCollection ui = uIGroupDetailsData0InsComboBox.FindMatchingControls();
                foreach (HtmlComboBox Ins in ui)
                {
                    //Ins.SetFocus();
                    Ins.SelectedItem = this.selectInsurance_MethodParams.UIGroupDetailsData0InsComboBoxSelectedItem;
                    Keyboard.SendKeys("{PGDN}");
                }
                IsInsuranceSelected = true;
                WriteLogs("PASS : Insurance Selected for all passengers.");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Could not Select Insurance.");
                WriteLogs("--------" + ex.Message.ToString());
            }
            return IsInsuranceSelected;
        }
        
        #region Properties
        public virtual selectInsurance_MethodParams selectInsurance_MethodParams
        {
            get
            {
                if ((this.mselectInsurance_MethodParams == null))
                {
                    this.mselectInsurance_MethodParams = new selectInsurance_MethodParams();
                }
                return this.mselectInsurance_MethodParams;
            }
        }
        
        public UIVillaPlusGroupDetailWindow UIVillaPlusGroupDetailWindow
        {
            get
            {
                if ((this.mUIVillaPlusGroupDetailWindow == null))
                {
                    this.mUIVillaPlusGroupDetailWindow = new UIVillaPlusGroupDetailWindow();
                }
                return this.mUIVillaPlusGroupDetailWindow;
            }
        }
        #endregion
        
        #region Fields
        private selectInsurance_MethodParams mselectInsurance_MethodParams;
        
        private UIVillaPlusGroupDetailWindow mUIVillaPlusGroupDetailWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'selectInsurance_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class selectInsurance_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Individual Insurance' in 'GroupDetailsData[0].Insurance' combo box
        /// </summary>
        public string UIGroupDetailsData0InsComboBoxSelectedItem = "Individual Insurance";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVillaPlusGroupDetailWindow : BrowserWindow
    {
        
        public UIVillaPlusGroupDetailWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Plus | Group Details");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPlusGroupDetailDocument UIVillaPlusGroupDetailDocument
        {
            get
            {
                if ((this.mUIVillaPlusGroupDetailDocument == null))
                {
                    this.mUIVillaPlusGroupDetailDocument = new UIVillaPlusGroupDetailDocument(this);
                }
                return this.mUIVillaPlusGroupDetailDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusGroupDetailDocument mUIVillaPlusGroupDetailDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVillaPlusGroupDetailDocument : HtmlDocument
    {
        
        public UIVillaPlusGroupDetailDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "book";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/booking/group-details";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/booking/group-details", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus | Group Details");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIGroupDetailsData0InsComboBox
        {
            get
            {
                if ((this.mUIGroupDetailsData0InsComboBox == null))
                {
                    this.mUIGroupDetailsData0InsComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIGroupDetailsData0InsComboBox.SearchProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.Id, "__Insurance", PropertyExpressionOperator.Contains));
                    this.mUIGroupDetailsData0InsComboBox.SearchProperties.Add(new PropertyExpression(HtmlComboBox.PropertyNames.Name, ".Insurance", PropertyExpressionOperator.Contains));
                    this.mUIGroupDetailsData0InsComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "valid";
                    this.mUIGroupDetailsData0InsComboBox.WindowTitles.Add("Villa Plus | Group Details");
                    #endregion
                }
                return this.mUIGroupDetailsData0InsComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIGroupDetailsData0InsComboBox;
        #endregion
    }
}
