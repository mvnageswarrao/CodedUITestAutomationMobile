// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.FlightsPage.verifyFExtrasDetails_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    using MobileTestAutomation.UIMap.FlightsPage.clickContinueBtn_MapClasses;
    using MobileTestAutomation.UIMap.FlightsPage.verifyTotalPriceOnFlightsPage_MapClasses;


    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class verifyFExtrasDetails_Map:logWriter
    {
        /// <summary>
        /// verifyFExtrasDetails_Method - Use 'verifyFExtrasDetails_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyFExtrasDetails_Method(Dictionary<string,string> ListofFExtrasFrmdb, string strURL)
        {
            #region Variable Declarations
            HtmlDiv uIItem0xCheckinBags20kPane = this.UIHttpmobstagingvillapWindow.UIHttpmobstagingvillapDocument.UIItem0xCheckinBags20kPane;
            #endregion

            verifyTotalPriceOnFlightsPage_Map TPrice = new verifyTotalPriceOnFlightsPage_Map();
            string intialTotalPrice = TPrice.verifyTotalPriceOnFlightsPage_Method().Replace("£", "").Trim();

            UITestControlCollection ui = uIItem0xCheckinBags20kPane.FindMatchingControls();
            int cnt = ui.Count;
            List<string> FExtrasFrmPage = new List<string>();
            //List<string> FExtrasFrmPageNew = new List<string>();
            string FExtrasFrmNew = string.Empty;


            foreach (HtmlDiv xx in ui)
            {
                string txtNew = xx.InnerText.Replace("\r\n", "");
                int indx = txtNew.IndexOf('x');
                FExtrasFrmNew = txtNew.Substring(indx).ToString().Trim();
              
                if (txtNew.Contains("x "))
                {
                    FExtrasFrmNew = FExtrasFrmNew.Substring(FExtrasFrmNew.IndexOf(' ')).ToString().Trim();
                }
                if (FExtrasFrmNew.Contains("-"))
                {
                    FExtrasFrmNew = FExtrasFrmNew.Remove(FExtrasFrmNew.LastIndexOf('-')).ToString().Trim();
                }
                else
                {
                    FExtrasFrmNew = FExtrasFrmNew.Remove(FExtrasFrmNew.LastIndexOf('£')).ToString().Trim();
                }
                if (FExtrasFrmNew.Contains("*"))
                {
                    FExtrasFrmNew = FExtrasFrmNew.Replace("*", "").Trim();
                }
                FExtrasFrmPage.Add(FExtrasFrmNew);
            }

            try
            {
                // Verify that the All the Villa Extras Listed in DB are displayed on Page'
                StringAssert.Equals(ListofFExtrasFrmdb.Remove(" "), FExtrasFrmPage.Remove(" "));
                WriteLogs("PASS : All the Flight Extras Listed in DB are displayed on Page.");
            }
            catch (AssertFailedException ex)
            {
                takeImage("verifyNumofFExtrasDisplayedinPopup");
                WriteLogs("FAIL : All the Flight Extras Listed in DB are Not displayed on Page.");
                WriteLogs("----------------- " + ex.Message.ToString());
            }

            Random rnd = new Random();
            //int i = 0;
            string NameFrmBar = string.Empty;
            string QtyFrmBar = string.Empty;
            string FExtraNmeFrmBar = string.Empty;
            string TotalPriceFrmBar = string.Empty;
            string FullNamefromPage = string.Empty;
            int TotalPrice = 0;
            string FullNameFrmDB = string.Empty;
            Decimal FinalTotalPrice = 0;

            try
            {
                foreach (HtmlDiv xx in ui)
                {
                    foreach (UITestControl o in xx.GetChildren())
                    {
                        if (o.GetType() == typeof(HtmlSpan))
                        {
                            if (o.GetProperty("displaytext").ToString() == "+")
                            {
                                Boolean IsPlusEnabled = true;
                                do
                                {
                                    if (Convert.ToInt32(FExtrasFrmPage.Count) <= 9)
                                        {
                                            //Keyboard.SendKeys("{PGDN}");
                                            Mouse.MoveScrollWheel(o, -15);
                                        }
                                        else
                                        {
                                            Mouse.MoveScrollWheel(o, -5);
                                            //Keyboard.SendKeys("{PGDN}");
                                    }
                                        Mouse.Click(o);
                                        NameFrmBar = xx.DisplayText.Replace("\r\n", "").Trim();
                                        QtyFrmBar = NameFrmBar.Split('x').GetValue(0).ToString().Replace("-", "").Trim();

                                        int indx = NameFrmBar.IndexOf('x');
                                        FExtraNmeFrmBar = NameFrmBar.Substring(indx).ToString().Trim();

                                        if (FExtraNmeFrmBar.Contains("x "))
                                        {
                                            FExtraNmeFrmBar = FExtraNmeFrmBar.Substring(FExtraNmeFrmBar.IndexOf(' ')).ToString().Trim();
                                        }
                                        if (FExtraNmeFrmBar.Contains(" - "))
                                        {
                                            FExtraNmeFrmBar = FExtraNmeFrmBar.Remove(FExtraNmeFrmBar.LastIndexOf('-')).ToString().Trim();
                                        }
                                        else
                                        {
                                            FExtraNmeFrmBar = FExtraNmeFrmBar.Remove(FExtraNmeFrmBar.LastIndexOf('£')).ToString().Trim();
                                        }
                                        if (FExtraNmeFrmBar.Contains("*"))
                                        {
                                            FExtraNmeFrmBar = FExtraNmeFrmBar.Replace("*", "").Trim();
                                        }
                                        TotalPriceFrmBar = NameFrmBar.Split('£').GetValue(1).ToString().Replace("+", "").Trim();
                                        FullNamefromPage = QtyFrmBar + " x " + FExtraNmeFrmBar + " £" + TotalPriceFrmBar;
                                        try
                                        {
                                            foreach (KeyValuePair<string, string> KV in ListofFExtrasFrmdb)
                                            {
                                                if (KV.Key.Trim() == FExtraNmeFrmBar.Trim())
                                                {
                                                    TotalPrice = Convert.ToInt32(QtyFrmBar) * Convert.ToInt32(Convert.ToDecimal(KV.Value));
                                                    FullNameFrmDB = QtyFrmBar + " x " + KV.Key.Trim() + " £" + TotalPrice + ".00";
                                                    StringAssert.Equals(FullNamefromPage, FullNameFrmDB);
                                                        try
                                                        {
                                                            FinalTotalPrice =Convert.ToDecimal(intialTotalPrice) + Convert.ToDecimal(TotalPriceFrmBar);
                                                            WriteLogs("PASS : Total Price(" + FinalTotalPrice + ")on Flights page is matched after adding Flight Extras price");
                                                        }
                                                        catch (Exception ex)
                                                        {
                                                            WriteLogs("FAIL : Total Price(" + FinalTotalPrice + ")on Flights page is NOT matched after adding Flight Extras price.");
                                                            WriteLogs("--------" + ex.Message.ToString());
                                                        }

                                                    string PlusEnabled = o.GetProperty("Class").ToString();
                                                    if (PlusEnabled == "icon-plus disabled")
                                                    {
                                                        IsPlusEnabled = false;
                                                    }
                                                }
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            WriteLogs("PASS : Flight Extra(" + FExtraNmeFrmBar + ")- Total Price " + TotalPriceFrmBar + " is Matched NOT When selected " + QtyFrmBar + " Quantity.");
                                            WriteLogs("----" + ex.Message.ToString());
                                        }
                                    }
                                    while (IsPlusEnabled == true);
                                    WriteLogs("PASS : Flight Extra(" + FExtraNmeFrmBar + ")- Total Price " + TotalPriceFrmBar + " is Matched When selected " + QtyFrmBar + " Quantity.");
                            }
                        }
                    }
                }
            }
            catch(Exception)
            {
                 WriteLogs("INFO : Could Not Select Flight Extras.");
            }        
        }
        
        #region Properties
        public virtual verifyFExtrasDetails_MethodExpectedValues verifyFExtrasDetails_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyFExtrasDetails_MethodExpectedValues == null))
                {
                    this.mverifyFExtrasDetails_MethodExpectedValues = new verifyFExtrasDetails_MethodExpectedValues();
                }
                return this.mverifyFExtrasDetails_MethodExpectedValues;
            }
        }
        
        public UIHttpmobstagingvillapWindow UIHttpmobstagingvillapWindow
        {
            get
            {
                if ((this.mUIHttpmobstagingvillapWindow == null))
                {
                    this.mUIHttpmobstagingvillapWindow = new UIHttpmobstagingvillapWindow();
                }
                return this.mUIHttpmobstagingvillapWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyFExtrasDetails_MethodExpectedValues mverifyFExtrasDetails_MethodExpectedValues;
        
        private UIHttpmobstagingvillapWindow mUIHttpmobstagingvillapWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyFExtrasDetails_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class verifyFExtrasDetails_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '- 0 x Check-in Bags (20kg) - 0.00 +' pane contains '- 
        ///0  x Check-in Bags (20kg)  - 0.00
        ///+ '
        /// </summary>
        public string UIItem0xCheckinBags20kPaneInnerText = "- \r\n0  x Check-in Bags (20kg)  - 0.00\r\n+ ";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHttpmobstagingvillapWindow : BrowserWindow
    {
        
        public UIHttpmobstagingvillapWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, ".villaplus.com/booking/", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("http://mobstaging.villaplus.com/booking/updateFlight");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHttpmobstagingvillapDocument UIHttpmobstagingvillapDocument
        {
            get
            {
                if ((this.mUIHttpmobstagingvillapDocument == null))
                {
                    this.mUIHttpmobstagingvillapDocument = new UIHttpmobstagingvillapDocument(this);
                }
                return this.mUIHttpmobstagingvillapDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHttpmobstagingvillapDocument mUIHttpmobstagingvillapDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHttpmobstagingvillapDocument : HtmlDocument
    {
        
        public UIHttpmobstagingvillapDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "book";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/booking/", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/booking/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("http://mobstaging.villaplus.com/booking/updateFlight");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItem0xCheckinBags20kPane
        {
            get
            {
                if ((this.mUIItem0xCheckinBags20kPane == null))
                {
                    this.mUIItem0xCheckinBags20kPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem0xCheckinBags20kPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.Class, "minus-plus vExtras vExtras", PropertyExpressionOperator.Contains));
                    this.mUIItem0xCheckinBags20kPane.WindowTitles.Add("http://mobstaging.villaplus.com/booking/updateFlight");
                    #endregion
                }
                return this.mUIItem0xCheckinBags20kPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItem0xCheckinBags20kPane;
        #endregion
    }
}
