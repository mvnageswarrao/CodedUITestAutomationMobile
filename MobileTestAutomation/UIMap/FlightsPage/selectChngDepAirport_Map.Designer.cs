// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.FlightsPage.selectChngDepAirport_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class selectChngDepAirport_Map:logWriter
    {
        
        /// <summary>
        /// selectChngDepAirport_Method - Use 'selectChngDepAirport_MethodParams' to pass parameters into this method.
        /// </summary>
        public void selectChngDepAirport_Method()
        {
            #region Variable Declarations
            HtmlComboBox uIOptDepAirportsComboBox = this.UIVillaPlusAmendFlightWindow.UIVillaPlusAmendFlightDocument.UIOptDepAirportsComboBox;
            #endregion

            int count = uIOptDepAirportsComboBox.ItemCount;
            string DepAirports = uIOptDepAirportsComboBox.InnerText;
            string[] LstDepAirports = DepAirports.Split(' ');
            
            Random rnd = new Random();
            int index = rnd.Next(0, count);
            
            try
            {
                // Select 'All Midlands' in 'optDepAirports' combo box
                //uIOptDepAirportsComboBox.SelectedItem = this.selectChngDepAirport_MethodParams.UIOptDepAirportsComboBoxSelectedItem;
                uIOptDepAirportsComboBox.SelectedItem = LstDepAirports[index];
                WriteLogs("PASS : "+ uIOptDepAirportsComboBox.SelectedItem+" is Selected as \"Departure Airport\".");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Could NOT Change \"Departure Airport\".");
                WriteLogs("--------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public virtual selectChngDepAirport_MethodParams selectChngDepAirport_MethodParams
        {
            get
            {
                if ((this.mselectChngDepAirport_MethodParams == null))
                {
                    this.mselectChngDepAirport_MethodParams = new selectChngDepAirport_MethodParams();
                }
                return this.mselectChngDepAirport_MethodParams;
            }
        }
        
        public UIVillaPlusAmendFlightWindow UIVillaPlusAmendFlightWindow
        {
            get
            {
                if ((this.mUIVillaPlusAmendFlightWindow == null))
                {
                    this.mUIVillaPlusAmendFlightWindow = new UIVillaPlusAmendFlightWindow();
                }
                return this.mUIVillaPlusAmendFlightWindow;
            }
        }
        #endregion
        
        #region Fields
        private selectChngDepAirport_MethodParams mselectChngDepAirport_MethodParams;
        
        private UIVillaPlusAmendFlightWindow mUIVillaPlusAmendFlightWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'selectChngDepAirport_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class selectChngDepAirport_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'All Midlands' in 'optDepAirports' combo box
        /// </summary>
        public string UIOptDepAirportsComboBoxSelectedItem = "All Midlands";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVillaPlusAmendFlightWindow : BrowserWindow
    {
        
        public UIVillaPlusAmendFlightWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Plus | Amend Flights");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPlusAmendFlightDocument UIVillaPlusAmendFlightDocument
        {
            get
            {
                if ((this.mUIVillaPlusAmendFlightDocument == null))
                {
                    this.mUIVillaPlusAmendFlightDocument = new UIVillaPlusAmendFlightDocument(this);
                }
                return this.mUIVillaPlusAmendFlightDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusAmendFlightDocument mUIVillaPlusAmendFlightDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVillaPlusAmendFlightDocument : HtmlDocument
    {
        
        public UIVillaPlusAmendFlightDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "amendFlightBody";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/booking/amendflight", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/booking/amendflight", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus | Amend Flights");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIOptDepAirportsComboBox
        {
            get
            {
                if ((this.mUIOptDepAirportsComboBox == null))
                {
                    this.mUIOptDepAirportsComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIOptDepAirportsComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "optDepAirports";
                    this.mUIOptDepAirportsComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=\"optDepAirports\"";
                    this.mUIOptDepAirportsComboBox.WindowTitles.Add("Villa Plus | Amend Flights");
                    #endregion
                }
                return this.mUIOptDepAirportsComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIOptDepAirportsComboBox;
        #endregion
    }
}
