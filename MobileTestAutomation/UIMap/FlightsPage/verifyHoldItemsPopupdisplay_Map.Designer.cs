// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.FlightsPage.verifyHoldItemsPopupdisplay_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class verifyHoldItemsPopupdisplay_Map:logWriter
    {
        
        /// <summary>
        /// verifyHoldItemsPopupdisplay_Method - Use 'verifyHoldItemsPopupdisplay_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public Boolean verifyHoldItemsPopupdisplay_Method()
        {
            #region Variable Declarations
            HtmlCustom uIHoldItemsCustom = this.UIVillaPlusBookingInteWindow.UIVillaPlusBookingDocument.UIConfBoxPane.UIHoldItemsCustom;
            #endregion

            Boolean Ispopupdisplayed = false;

            try
            {
                // Verify that the 'InnerText' property of 'Hold Items' custom control contains 'Hold Items'
                StringAssert.Contains(uIHoldItemsCustom.InnerText, this.verifyHoldItemsPopupdisplay_MethodExpectedValues.UIHoldItemsCustomInnerText);
                Ispopupdisplayed = uIHoldItemsCustom.TryFind();
                WriteLogs("INFO : \"Hold Items\" Popup displayed.");

            }
            catch (Exception ex)
            {
                WriteLogs("INFO : \"Hold Items\" Popup is NOT displayed.");
                WriteLogs("--------" + ex.Message.ToString());
            }

            return Ispopupdisplayed;
        }
        
        #region Properties
        public virtual verifyHoldItemsPopupdisplay_MethodExpectedValues verifyHoldItemsPopupdisplay_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyHoldItemsPopupdisplay_MethodExpectedValues == null))
                {
                    this.mverifyHoldItemsPopupdisplay_MethodExpectedValues = new verifyHoldItemsPopupdisplay_MethodExpectedValues();
                }
                return this.mverifyHoldItemsPopupdisplay_MethodExpectedValues;
            }
        }
        
        public UIVillaPlusBookingInteWindow UIVillaPlusBookingInteWindow
        {
            get
            {
                if ((this.mUIVillaPlusBookingInteWindow == null))
                {
                    this.mUIVillaPlusBookingInteWindow = new UIVillaPlusBookingInteWindow();
                }
                return this.mUIVillaPlusBookingInteWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyHoldItemsPopupdisplay_MethodExpectedValues mverifyHoldItemsPopupdisplay_MethodExpectedValues;
        
        private UIVillaPlusBookingInteWindow mUIVillaPlusBookingInteWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyHoldItemsPopupdisplay_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class verifyHoldItemsPopupdisplay_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Hold Items' custom control contains 'Hold Items'
        /// </summary>
        public string UIHoldItemsCustomInnerText = "Hold Items";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaPlusBookingInteWindow : BrowserWindow
    {
        
        public UIVillaPlusBookingInteWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus | Booking", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Plus | Booking");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPlusBookingDocument UIVillaPlusBookingDocument
        {
            get
            {
                if ((this.mUIVillaPlusBookingDocument == null))
                {
                    this.mUIVillaPlusBookingDocument = new UIVillaPlusBookingDocument(this);
                }
                return this.mUIVillaPlusBookingDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusBookingDocument mUIVillaPlusBookingDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaPlusBookingDocument : HtmlDocument
    {
        
        public UIVillaPlusBookingDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "book";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus | Booking", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/booking/", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/booking/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus | Booking");
            #endregion
        }
        
        #region Properties
        public UIConfBoxPane UIConfBoxPane
        {
            get
            {
                if ((this.mUIConfBoxPane == null))
                {
                    this.mUIConfBoxPane = new UIConfBoxPane(this);
                }
                return this.mUIConfBoxPane;
            }
        }
        #endregion
        
        #region Fields
        private UIConfBoxPane mUIConfBoxPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIConfBoxPane : HtmlDiv
    {
        
        public UIConfBoxPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "confBox";
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Hold Items", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "infoBoxContent lightbox";
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "class=\"infoBoxContent lightbox\" id=\"confBox\"", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus | Booking");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIHoldItemsCustom
        {
            get
            {
                if ((this.mUIHoldItemsCustom == null))
                {
                    this.mUIHoldItemsCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIHoldItemsCustom.SearchProperties["TagName"] = "LI";
                    this.mUIHoldItemsCustom.FilterProperties["InnerText"] = "Hold Items";
                    this.mUIHoldItemsCustom.WindowTitles.Add("Villa Plus | Booking");
                    #endregion
                }
                return this.mUIHoldItemsCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIHoldItemsCustom;
        #endregion
    }
}
