// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.SearchPage.clickPlusFrDuration_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class clickPlusFrDuration_Map:logWriter
    {
        
        /// <summary>
        /// clickPlusFrDuration_Method
        /// </summary>
        public void clickPlusFrDuration_Method()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem21nightsPane.UIItemPane;
            #endregion

          string TxtFrmPage = uIItemPane.GetParent().GetProperty("innertext").ToString().Replace("\r\n","").Replace("+","").Replace("-","").Trim();
          WriteLogs("PASS : \"" + TxtFrmPage + "\" was Selected as Default Duration.");

          int ExpTxtTemp = Convert.ToInt32(TxtFrmPage.Replace("nights","").Trim());
          //int NumofAdultsfromConfig = Convert.ToInt32(ConfigurationManager.AppSettings["NoofAdults"].ToString());

            
          
          try
          {
              // Click '+' link
              Mouse.Click(uIItemPane);
              TxtFrmPage = uIItemPane.GetParent().GetProperty("innertext").ToString().Replace("\r\n", "").Replace("+", "").Replace("-", "").Trim();
              string ExpTxt = ((ExpTxtTemp+7)+" nights").Trim();
              StringAssert.Equals(TxtFrmPage, ExpTxt);
              WriteLogs("PASS : Clicked Plus Once and changed Duration to \"" + TxtFrmPage + "\" as Expected.");
              Mouse.DoubleClick(uIItemPane);
              TxtFrmPage = uIItemPane.GetParent().GetProperty("innertext").ToString().Replace("\r\n", "").Replace("+", "").Replace("-", "").Trim();
              ExpTxt = ((ExpTxtTemp + 21) +" nights").Trim();
              StringAssert.Equals(TxtFrmPage, ExpTxt);
              WriteLogs("PASS : Clicked Plus Twice and changed Duration to \"" + TxtFrmPage + "\" as Expected.");
          }
          catch (Exception ex)
          {
              WriteLogs("FAIL : Could not click + icon from the Duration." + ex.ToString());
          }
        }

        public void verifyPlusFrDurationDisabled_Method()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem21nightsPane.UIItemPane;
            #endregion

            string TxtFrmPage = uIItemPane.GetParent().GetProperty("innertext").ToString().Replace("\r\n", "").Replace("+", "").Replace("-", "").Trim();

            int ExpTxtTemp = Convert.ToInt32(TxtFrmPage.Replace("nights", "").Trim());
            //int NumofAdultsfromConfig = Convert.ToInt32(ConfigurationManager.AppSettings["NoofAdults"].ToString());
            switch (ExpTxtTemp)
            {
                case 7:
                    Mouse.Click(uIItemPane);
                    Mouse.DoubleClick(uIItemPane);
                    Boolean isPlusDisabled = uIItemPane.ControlDefinition.Contains("disabled");
                    if (isPlusDisabled == true)
                    {
                        WriteLogs("PASS : + icon has been disabled.");
                    }
                    else
                    {
                        WriteLogs("FAIL : + icon is NOT disabled.");
                    }
                    break;

                case 14:
                    Mouse.DoubleClick(uIItemPane);
                    isPlusDisabled = uIItemPane.ControlDefinition.Contains("disabled");

                    if (isPlusDisabled == true)
                    {
                        WriteLogs("PASS : + icon has been disabled.");
                    }
                    else
                    {
                         WriteLogs("FAIL : + icon is NOT disabled.");
                    }
                    break;
                case 21:
                    Mouse.Click(uIItemPane);
                     isPlusDisabled = uIItemPane.ControlDefinition.Contains("disabled");

                    if (isPlusDisabled == true)
                    {
                        WriteLogs("PASS : + icon has been disabled.");
                    }
                    else
                    {
                        WriteLogs("FAIL : + icon is NOT disabled.");
                    }
                    break;
                case 28:
                    isPlusDisabled = uIItemPane.ControlDefinition.Contains("disabled");
                    if (isPlusDisabled == true)
                    {
                        WriteLogs("PASS : + icon has been disabled.");
                    }
                    else
                    {
                        WriteLogs("FAIL : + icon is NOT disabled.");
                    }
                    break;
             }
            
        }

        public string selectDuration_Method()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem21nightsPane.UIItemPane;
            #endregion
            Random rnd = new Random();
            int rndnum = 0;
            string selectedDuration = uIItemPane.GetParent().GetProperty("innertext").ToString().Replace("\r\n", "").Replace("+", "").Replace("-", "").Trim();
            Boolean isPlusDisabled = uIItemPane.ControlDefinition.Contains("disabled");

            if (isPlusDisabled != true)
            {
                if (selectedDuration.Contains("7"))
                {
                    rndnum = rnd.Next(3);
                }
                else if (selectedDuration.Contains("14"))
                {
                    rndnum = rnd.Next(2);
                }
                else if (selectedDuration.Contains("21"))
                {
                    rndnum = rnd.Next(1);
                }
                else if (selectedDuration.Contains("24"))
                {
                    rndnum = rnd.Next(0);
                }
            }
           
            try
                {
                    for (int i = 1; i <= rndnum; i++)
                    {
                        Mouse.Click(uIItemPane);
                    }
                    selectedDuration = uIItemPane.GetParent().GetProperty("innertext").ToString().Replace("\r\n", "").Replace("+", "").Replace("-", "").Trim();
                    WriteLogs("PASS : Selected " + selectedDuration + ".");
                }
                catch (Exception ex)
                {
                    WriteLogs("FAIL : Could Not Select Duration.");
                    WriteLogs("--------" + ex.Message.ToString());
                }
            
            return selectedDuration;            
        }

              
        #region Properties
        public UISearchVillaPlusWindoWindow UISearchVillaPlusWindoWindow
        {
            get
            {
                if ((this.mUISearchVillaPlusWindoWindow == null))
                {
                    this.mUISearchVillaPlusWindoWindow = new UISearchVillaPlusWindoWindow();
                }
                return this.mUISearchVillaPlusWindoWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISearchVillaPlusWindoWindow mUISearchVillaPlusWindoWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISearchVillaPlusWindoWindow : BrowserWindow
    {
        
        public UISearchVillaPlusWindoWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Search | Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISearchVillaPlusDocument UISearchVillaPlusDocument
        {
            get
            {
                if ((this.mUISearchVillaPlusDocument == null))
                {
                    this.mUISearchVillaPlusDocument = new UISearchVillaPlusDocument(this);
                }
                return this.mUISearchVillaPlusDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISearchVillaPlusDocument mUISearchVillaPlusDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISearchVillaPlusDocument : HtmlDocument
    {
        
        public UISearchVillaPlusDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Search | Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/search", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/search", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        #region Properties
        public UIItem21nightsPane UIItem21nightsPane
        {
            get
            {
                if ((this.mUIItem21nightsPane == null))
                {
                    this.mUIItem21nightsPane = new UIItem21nightsPane(this);
                }
                return this.mUIItem21nightsPane;
            }
        }
        #endregion
        
        #region Fields
        private UIItem21nightsPane mUIItem21nightsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItem21nightsPane : HtmlDiv
    {
        
        public UIItem21nightsPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "durationselector";
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "nights", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "minus-plus";
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "class=\"minus-plus\" id=\"durationselector\" ", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "+";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "icon-plus";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"icon-plus\"";
                    this.mUIItemPane.WindowTitles.Add("Search | Villa Plus");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIItemPane;
        #endregion
    }
}
