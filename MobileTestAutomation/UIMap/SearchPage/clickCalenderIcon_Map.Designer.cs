// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.SearchPage.clickCalenderIcon_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class clickCalenderIcon_Map:logWriter
    {
        
        /// <summary>
        /// clickCalenderIcon_Method
        /// </summary>
        public void clickCalenderIcon_Method()
        {
            #region Variable Declarations
            HtmlHyperlink uIItem26March2015Hyperlink = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem26March2015Hyperlink;
            #endregion

            try
            {
                // Click '26 March 2015' link
                Mouse.Click(uIItem26March2015Hyperlink, new Point(357, 16));
                WriteLogs("FAIL : Clicked on \"Calender Icon\".");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Could Not Click On \"Calender Icon\".");
                WriteLogs("--------" + ex.Message.ToString());
            }
        }

        public string GetDefaultSelectedDate_Method()
        {
            #region Variable Declarations
            HtmlHyperlink uIItem26March2015Hyperlink = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem26March2015Hyperlink;
            #endregion

            string DefaultSelectedDate = uIItem26March2015Hyperlink.InnerText;
            return DefaultSelectedDate;
          
        }

        public string GetTempSelectedDate_Method()
        {
            #region Variable Declarations
            HtmlHyperlink uIItem26March2015Hyperlink = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem26March2015Hyperlink;
            #endregion

            string DefaultSelectedDate = uIItem26March2015Hyperlink.InnerText;

            string[] ArrDefaultSelectedDATE = DefaultSelectedDate.Split(' ');
            string Month = ArrDefaultSelectedDATE[1];
            int monthNum = DateTime.ParseExact(Month, "MMMM", System.Globalization.CultureInfo.InvariantCulture).Month;
            string ModMonthNum = string.Empty;

            if (Convert.ToInt32(ArrDefaultSelectedDATE[0]) < 10)
            {
                ArrDefaultSelectedDATE[0] = '0' + ArrDefaultSelectedDATE[0];
            }
            else
            {
                ArrDefaultSelectedDATE[0] = ArrDefaultSelectedDATE[0];
            }
            if (monthNum < 10)
            {
                ModMonthNum = '0' + monthNum.ToString();
            }
            else
            {
                ModMonthNum = monthNum.ToString();
            }
            string ModSelectedDate = ModMonthNum + "-" + ArrDefaultSelectedDATE[0] + "-" + ArrDefaultSelectedDATE[2];

            return ModSelectedDate;
        }




        #region Properties
        public UISearchVillaPlusWindoWindow UISearchVillaPlusWindoWindow
        {
            get
            {
                if ((this.mUISearchVillaPlusWindoWindow == null))
                {
                    this.mUISearchVillaPlusWindoWindow = new UISearchVillaPlusWindoWindow();
                }
                return this.mUISearchVillaPlusWindoWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISearchVillaPlusWindoWindow mUISearchVillaPlusWindoWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISearchVillaPlusWindoWindow : BrowserWindow
    {
        
        public UISearchVillaPlusWindoWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Search | Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISearchVillaPlusDocument UISearchVillaPlusDocument
        {
            get
            {
                if ((this.mUISearchVillaPlusDocument == null))
                {
                    this.mUISearchVillaPlusDocument = new UISearchVillaPlusDocument(this);
                }
                return this.mUISearchVillaPlusDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISearchVillaPlusDocument mUISearchVillaPlusDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISearchVillaPlusDocument : HtmlDocument
    {
        
        public UISearchVillaPlusDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Search | Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/search", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/search", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItem26March2015Hyperlink
        {
            get
            {
                if ((this.mUIItem26March2015Hyperlink == null))
                {
                    this.mUIItem26March2015Hyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItem26March2015Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "hypSelectDepartureDate";
                    this.mUIItem26March2015Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "showSlideControl(\'searchCalender\',%20\'divSelectDate\');%20SetDateInCalender();";
                    this.mUIItem26March2015Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:showSlideControl(\'searchCalender\', \'divSelectDate\'); SetDateInCalender" +
                        "();";
                    this.mUIItem26March2015Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "fake-input icon-cal";
                    this.mUIItem26March2015Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"fake-input icon-cal\" id=\"hypSelec";
                    this.mUIItem26March2015Hyperlink.WindowTitles.Add("Search | Villa Plus");
                    #endregion
                }
                return this.mUIItem26March2015Hyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItem26March2015Hyperlink;
        #endregion
    }
}
