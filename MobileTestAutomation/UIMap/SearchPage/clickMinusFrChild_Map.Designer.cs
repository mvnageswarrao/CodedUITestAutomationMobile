// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.SearchPage.clickMinusFrChild_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using System.Configuration;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class clickMinusFrChild_Map:logWriter
    {
        
        /// <summary>
        /// clickMinusFrChild_Method
        /// </summary>
        public int clickMinusFrChild_Method(int ChildTobeSelected)
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem2ChildrenPane.UIItemPane;
            HtmlControl UIItem2ChildrenPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem2ChildrenPane;
            #endregion

            int NumofChildSelected = 0;

            string defltchild = UIItem2ChildrenPane.InnerText;
            string[] arrdefltchild = defltchild.Split(' ');
            defltchild = arrdefltchild[1].Replace("\r\n", string.Empty);
            int defltNumofchild = Convert.ToInt32(defltchild);

            while (defltNumofchild > ChildTobeSelected)
            {
                // Click '-' pane
                Mouse.Click(uIItemPane);
                defltchild = UIItem2ChildrenPane.InnerText;
                arrdefltchild = defltchild.Split(' ');
                defltchild = arrdefltchild[1].Replace("\r\n", string.Empty);
                defltNumofchild = Convert.ToInt32(defltchild);
            }

            NumofChildSelected = defltNumofchild;
            WriteLogs("PASS : \"" + NumofChildSelected + "\" Child Selected.");

            return NumofChildSelected;
        }

        public int clickMinusFrZeroChild_Method()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem2ChildrenPane.UIItemPane;
            HtmlControl UIItem2ChildrenPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem2ChildrenPane;
            #endregion

            int NumofChildSelected = 0;

            string defltchild = UIItem2ChildrenPane.InnerText;
            string[] arrdefltchild = defltchild.Split(' ');
            defltchild = arrdefltchild[1].Replace("\r\n", string.Empty);
            int defltNumofchild = Convert.ToInt32(defltchild);

            while (defltNumofchild != 0)
            {
                // Click '-' pane
                Mouse.Click(uIItemPane);
                defltchild = UIItem2ChildrenPane.InnerText;
                arrdefltchild = defltchild.Split(' ');
                defltchild = arrdefltchild[1].Replace("\r\n", string.Empty);
                defltNumofchild = Convert.ToInt32(defltchild);
            }
            NumofChildSelected = defltNumofchild;
            WriteLogs("PASS : \"" + NumofChildSelected + "\" Child Selected.");

            return NumofChildSelected;
        }

        public void verifyMinusFrChildDisabled_Method()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem2ChildrenPane.UIItemPane;
            HtmlControl UIItem2ChildrenPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem2ChildrenPane;
            #endregion

            string defltChild = UIItem2ChildrenPane.InnerText;
            string[] arrdefltChild = defltChild.Split(' ');
            defltChild = arrdefltChild[1].Replace("\r\n", string.Empty);
            int defltNumofChild = Convert.ToInt32(defltChild);

            Boolean isMinusDisabled = uIItemPane.ControlDefinition.Contains("disabled");

            while (isMinusDisabled != true)
            {
                Mouse.Click(uIItemPane);
                isMinusDisabled = uIItemPane.ControlDefinition.Contains("disabled");
            }
            WriteLogs("PASS : - icon for Children has been disabled.");
        }
        
        #region Properties
        public UISearchVillaPlusWindoWindow UISearchVillaPlusWindoWindow
        {
            get
            {
                if ((this.mUISearchVillaPlusWindoWindow == null))
                {
                    this.mUISearchVillaPlusWindoWindow = new UISearchVillaPlusWindoWindow();
                }
                return this.mUISearchVillaPlusWindoWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISearchVillaPlusWindoWindow mUISearchVillaPlusWindoWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISearchVillaPlusWindoWindow : BrowserWindow
    {
        
        public UISearchVillaPlusWindoWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Search | Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISearchVillaPlusDocument UISearchVillaPlusDocument
        {
            get
            {
                if ((this.mUISearchVillaPlusDocument == null))
                {
                    this.mUISearchVillaPlusDocument = new UISearchVillaPlusDocument(this);
                }
                return this.mUISearchVillaPlusDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISearchVillaPlusDocument mUISearchVillaPlusDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISearchVillaPlusDocument : HtmlDocument
    {
        
        public UISearchVillaPlusDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Search | Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/search", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/search", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        #region Properties
        public UIItem2ChildrenPane UIItem2ChildrenPane
        {
            get
            {
                if ((this.mUIItem2ChildrenPane == null))
                {
                    this.mUIItem2ChildrenPane = new UIItem2ChildrenPane(this);
                }
                return this.mUIItem2ChildrenPane;
            }
        }
        #endregion
        
        #region Fields
        private UIItem2ChildrenPane mUIItem2ChildrenPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItem2ChildrenPane : HtmlDiv
    {
        
        public UIItem2ChildrenPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "childselector";
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "minus-plus";
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "class=\"minus-plus\"", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "icon-minus";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"icon-minus\"";
                    this.mUIItemPane.WindowTitles.Add("Search | Villa Plus");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIItemPane;
        #endregion
    }
}
