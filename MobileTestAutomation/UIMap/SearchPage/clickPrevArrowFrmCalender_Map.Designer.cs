// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.SearchPage.clickPrevArrowFrmCalender_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class clickPrevArrowFrmCalender_Map:logWriter
    {
        
        /// <summary>
        /// clickPrevArrowFrmCalender_Method
        /// </summary>
        public void clickPrevArrowFrmCalender_Method(int NumofPrevclicks)
        {
            #region Variable Declarations
            HtmlCustom uIPrevCustom = this.UISearchVillaPlusInterWindow.UISearchVillaPlusDocument.UIUidatepickerdivPane.UIPrevCustom;
            #endregion

            if(NumofPrevclicks<0)
            {
                NumofPrevclicks = -(NumofPrevclicks);
            }
            var btnPosition = uIPrevCustom.BoundingRectangle;
            Point relativePoint = new Point();
            relativePoint = new Point(btnPosition.X, btnPosition.Y);
            if (btnPosition.Y == 178)
            {
                for (int i = 1; i <= NumofPrevclicks; i++)
                {
                    Mouse.Move(relativePoint);
                    Mouse.Click(relativePoint);
                }
                }
            else
            {
                UISearchVillaPlusInterWindow.Close();
                WriteLogs("INFO : Browser was Closed as the Previous Month Control On Calender is Not Avaialble.");
            }


            // Click 'Prev' custom control
            //Mouse.Click(uIPrevCustom, new Point(32, 26));
        }
        
        #region Properties
        public UISearchVillaPlusInterWindow UISearchVillaPlusInterWindow
        {
            get
            {
                if ((this.mUISearchVillaPlusInterWindow == null))
                {
                    this.mUISearchVillaPlusInterWindow = new UISearchVillaPlusInterWindow();
                }
                return this.mUISearchVillaPlusInterWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISearchVillaPlusInterWindow mUISearchVillaPlusInterWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISearchVillaPlusInterWindow : BrowserWindow
    {
        
        public UISearchVillaPlusInterWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISearchVillaPlusDocument UISearchVillaPlusDocument
        {
            get
            {
                if ((this.mUISearchVillaPlusDocument == null))
                {
                    this.mUISearchVillaPlusDocument = new UISearchVillaPlusDocument(this);
                }
                return this.mUISearchVillaPlusDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISearchVillaPlusDocument mUISearchVillaPlusDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISearchVillaPlusDocument : HtmlDocument
    {
        
        public UISearchVillaPlusDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/search", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/search", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        #region Properties
        public UIUidatepickerdivPane UIUidatepickerdivPane
        {
            get
            {
                if ((this.mUIUidatepickerdivPane == null))
                {
                    this.mUIUidatepickerdivPane = new UIUidatepickerdivPane(this);
                }
                return this.mUIUidatepickerdivPane;
            }
        }
        #endregion
        
        #region Fields
        private UIUidatepickerdivPane mUIUidatepickerdivPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUidatepickerdivPane : HtmlDiv
    {
        
        public UIUidatepickerdivPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ui-datepicker-div";
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "atmm hasDatepicker";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"atmm hasDatepicker\" id=\"ui-datepicker-div\"";
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIPrevCustom
        {
            get
            {
                if ((this.mUIPrevCustom == null))
                {
                    this.mUIPrevCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIPrevCustom.SearchProperties["TagName"] = "A";
                    this.mUIPrevCustom.FilterProperties["Class"] = "ui-datepicker-prev ui-corner-all";
                    this.mUIPrevCustom.FilterProperties["ControlDefinition"] = "title=\"Prev\" class=\"ui-datepicker-prev u";
                    this.mUIPrevCustom.WindowTitles.Add("Search | Villa Plus");
                    #endregion
                }
                return this.mUIPrevCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIPrevCustom;
        #endregion
    }
}
