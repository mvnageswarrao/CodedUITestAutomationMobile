// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.SearchPage.clickCentreName_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class clickCentreName_Map:logWriter
    {
        
        /// <summary>
        /// clickCentreName_Method
        /// </summary>
        public void clickCentreName_Method()
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIDestResortVillaListCustom.UIItemCustom;
            #endregion

            // Click custom control
            try
            {
                Mouse.Click(uIItemCustom, new Point(18, 26));
                WriteLogs("Selected centre name clicked:Pass");
            }
            catch (Exception ex)
            {
                WriteLogs("Issue while clicking selected centre name :Fail" + ex.ToString());
            }
        }
        
        #region Properties
        public UISearchVillaPlusWindoWindow UISearchVillaPlusWindoWindow
        {
            get
            {
                if ((this.mUISearchVillaPlusWindoWindow == null))
                {
                    this.mUISearchVillaPlusWindoWindow = new UISearchVillaPlusWindoWindow();
                }
                return this.mUISearchVillaPlusWindoWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISearchVillaPlusWindoWindow mUISearchVillaPlusWindoWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISearchVillaPlusWindoWindow : BrowserWindow
    {
        
        public UISearchVillaPlusWindoWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Search | Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISearchVillaPlusDocument UISearchVillaPlusDocument
        {
            get
            {
                if ((this.mUISearchVillaPlusDocument == null))
                {
                    this.mUISearchVillaPlusDocument = new UISearchVillaPlusDocument(this);
                }
                return this.mUISearchVillaPlusDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISearchVillaPlusDocument mUISearchVillaPlusDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISearchVillaPlusDocument : HtmlDocument
    {
        
        public UISearchVillaPlusDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Search | Villa Plus";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/search", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "http://m.villaplus.com/search", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        #region Properties
        public UIDestResortVillaListCustom UIDestResortVillaListCustom
        {
            get
            {
                if ((this.mUIDestResortVillaListCustom == null))
                {
                    this.mUIDestResortVillaListCustom = new UIDestResortVillaListCustom(this);
                }
                return this.mUIDestResortVillaListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDestResortVillaListCustom mUIDestResortVillaListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDestResortVillaListCustom : HtmlCustom
    {
        
        public UIDestResortVillaListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "SECTION";
            this.SearchProperties["Id"] = "destResortVillaList";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "";
            this.FilterProperties.Add(new PropertyExpression("ControlDefinition", "id=\"destResortVillaList\"", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression("TagInstance", "3", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties.Add(new PropertyExpression("TagName", "A", PropertyExpressionOperator.Contains));
                    this.mUIItemCustom.FilterProperties["Class"] = "";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "";
                    this.mUIItemCustom.FilterProperties.Add(new PropertyExpression("TagInstance", "4", PropertyExpressionOperator.Contains));
                    this.mUIItemCustom.WindowTitles.Add("Search | Villa Plus");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
}
