// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.SearchPage.clickMinusFrDuration_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class clickMinusFrDuration_Map:logWriter
    {
        
        /// <summary>
        /// clickMinusFrDuration_Method
        /// </summary>
        public void clickMinusFrDuration_Method()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem28nightsPane.UIItemPane;
            #endregion

            //int Numofitems = MaxOCCUPANCY / 2;
            //Random rnd = new Random();
            //int randomAdultsNum = rnd.Next(1, Numofitems);
            //int NumofAdultSelected = 0;

            //string defltadults = uIItemPane.InnerText;
            //int defltNumofadults = Convert.ToInt32(defltadults);

            //while (defltNumofadults == randomAdultsNum)
            //    {
                    // Click '-' pane
                    Mouse.Click(uIItemPane, new Point(13, 13));
                //}
                //WriteLogs("PASS : \"" + randomAdultsNum + "\" Adults Selected.");
                //NumofAdultSelected = randomAdultsNum;

                //return NumofAdultSelected;
                 
            }

        public void verifyMinusFrDurationDisabled_Method()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem28nightsPane.UIItemPane;
            #endregion

            string TxtFrmPage = uIItemPane.GetParent().GetProperty("innertext").ToString().Replace("\r\n", "").Replace("+", "").Replace("-", "").Trim();

            int ExpTxtTemp = Convert.ToInt32(TxtFrmPage.Replace("nights", "").Trim());
            //int NumofAdultsfromConfig = Convert.ToInt32(ConfigurationManager.AppSettings["NoofAdults"].ToString());
            switch (ExpTxtTemp)
            {
                case 28:
                    Mouse.Click(uIItemPane);
                    Mouse.DoubleClick(uIItemPane);
                    Boolean isMinusDisabled = uIItemPane.ControlDefinition.Contains("disabled");

                    if (isMinusDisabled == true)
                    {
                        WriteLogs("PASS : - icon has been disabled.");
                    }
                    else
                    {
                        WriteLogs("FAIL : - icon is NOT disabled.");
                    }
                    break;

                case 21:
                    Mouse.DoubleClick(uIItemPane);
                    isMinusDisabled = uIItemPane.ControlDefinition.Contains("disabled");

                    if (isMinusDisabled == true)
                    {
                        WriteLogs("PASS : - icon has been disabled.");
                    }
                    else
                    {
                        WriteLogs("FAIL : - icon is NOT disabled.");
                    }
                    break;
                case 14:
                    Mouse.Click(uIItemPane);
                    isMinusDisabled = uIItemPane.ControlDefinition.Contains("disabled");

                    if (isMinusDisabled == true)
                    {
                        WriteLogs("PASS : - icon has been disabled.");
                    }
                    else
                    {
                        WriteLogs("FAIL : - icon is NOT disabled.");
                    }
                    break;
                case 7:
                    isMinusDisabled = uIItemPane.ControlDefinition.Contains("disabled");
                    if (isMinusDisabled == true)
                    {
                        WriteLogs("PASS : - icon has been disabled.");
                    }
                    else
                    {
                        WriteLogs("FAIL : - icon is NOT disabled.");
                    }
                    break;
            }

        }

 
        #region Properties
        public UISearchVillaPlusWindoWindow UISearchVillaPlusWindoWindow
        {
            get
            {
                if ((this.mUISearchVillaPlusWindoWindow == null))
                {
                    this.mUISearchVillaPlusWindoWindow = new UISearchVillaPlusWindoWindow();
                }
                return this.mUISearchVillaPlusWindoWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISearchVillaPlusWindoWindow mUISearchVillaPlusWindoWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISearchVillaPlusWindoWindow : BrowserWindow
    {
        
        public UISearchVillaPlusWindoWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Search | Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISearchVillaPlusDocument UISearchVillaPlusDocument
        {
            get
            {
                if ((this.mUISearchVillaPlusDocument == null))
                {
                    this.mUISearchVillaPlusDocument = new UISearchVillaPlusDocument(this);
                }
                return this.mUISearchVillaPlusDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISearchVillaPlusDocument mUISearchVillaPlusDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISearchVillaPlusDocument : HtmlDocument
    {
        
        public UISearchVillaPlusDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Search | Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/search", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/search", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        #region Properties
        public UIItem28nightsPane UIItem28nightsPane
        {
            get
            {
                if ((this.mUIItem28nightsPane == null))
                {
                    this.mUIItem28nightsPane = new UIItem28nightsPane(this);
                }
                return this.mUIItem28nightsPane;
            }
        }
        #endregion
        
        #region Fields
        private UIItem28nightsPane mUIItem28nightsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItem28nightsPane : HtmlDiv
    {
        
        public UIItem28nightsPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "durationselector";
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "nights", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "minus-plus";
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "class=\"minus-plus\" id=\"durationselector\"", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "-";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "icon-minus";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"icon-minus\"";
                    this.mUIItemPane.WindowTitles.Add("Search | Villa Plus");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIItemPane;
        #endregion
    }
}
