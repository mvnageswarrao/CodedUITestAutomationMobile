// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.SearchPage.verifyValErrMoreInfantsthanAdults_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class verifyValErrMoreInfantsthanAdults_Map:logWriter
    {
        
        /// <summary>
        /// verifyValErrMoreInfantsthanAdults_Method - Use 'verifyValErrMoreInfantsthanAdults_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyValErrMoreInfantsthanAdults_Method()
        {
            #region Variable Declarations
            HtmlSpan uINumberofinfantscannoPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIPassengersNumberofinLabel.UINumberofinfantscannoPane;
            #endregion

            string ValErrTextFrmPage = uINumberofinfantscannoPane.InnerText;
            string ExpectedValErrTxt = "Number of infants can not be more than the number of adults travelling.";

            try
            {
                // Verify that the 'InnerText' property of 'Number of infants can not be more than t' pane equals 'Number of infants can not be more than the number of adults travelling.'
                Assert.AreEqual(ExpectedValErrTxt, ValErrTextFrmPage);
                WriteLogs("PASS : More Infants than Adults selected Error displayed Properly.");
            }
            catch (AssertFailedException ex)
            {
                WriteLogs("FAIL : More Infants than Adults selected Error NOT displayed.");
                WriteLogs("-----------------" + ex.Message.ToString());
            }
        }
        
        #region Properties
        public virtual verifyValErrMoreInfantsthanAdults_MethodExpectedValues verifyValErrMoreInfantsthanAdults_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyValErrMoreInfantsthanAdults_MethodExpectedValues == null))
                {
                    this.mverifyValErrMoreInfantsthanAdults_MethodExpectedValues = new verifyValErrMoreInfantsthanAdults_MethodExpectedValues();
                }
                return this.mverifyValErrMoreInfantsthanAdults_MethodExpectedValues;
            }
        }
        
        public UISearchVillaPlusWindoWindow UISearchVillaPlusWindoWindow
        {
            get
            {
                if ((this.mUISearchVillaPlusWindoWindow == null))
                {
                    this.mUISearchVillaPlusWindoWindow = new UISearchVillaPlusWindoWindow();
                }
                return this.mUISearchVillaPlusWindoWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyValErrMoreInfantsthanAdults_MethodExpectedValues mverifyValErrMoreInfantsthanAdults_MethodExpectedValues;
        
        private UISearchVillaPlusWindoWindow mUISearchVillaPlusWindoWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyValErrMoreInfantsthanAdults_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class verifyValErrMoreInfantsthanAdults_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Number of infants can not be more than t' pane equals 'Number of infants can not be more than the number of adults travelling.'
        /// </summary>
        public string UINumberofinfantscannoPaneInnerText = "Number of infants can not be more than the number of adults travelling.";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISearchVillaPlusWindoWindow : BrowserWindow
    {
        
        public UISearchVillaPlusWindoWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Search | Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISearchVillaPlusDocument UISearchVillaPlusDocument
        {
            get
            {
                if ((this.mUISearchVillaPlusDocument == null))
                {
                    this.mUISearchVillaPlusDocument = new UISearchVillaPlusDocument(this);
                }
                return this.mUISearchVillaPlusDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISearchVillaPlusDocument mUISearchVillaPlusDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISearchVillaPlusDocument : HtmlDocument
    {
        
        public UISearchVillaPlusDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Search | Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/search", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/search", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        #region Properties
        public UIPassengersNumberofinLabel UIPassengersNumberofinLabel
        {
            get
            {
                if ((this.mUIPassengersNumberofinLabel == null))
                {
                    this.mUIPassengersNumberofinLabel = new UIPassengersNumberofinLabel(this);
                }
                return this.mUIPassengersNumberofinLabel;
            }
        }
        #endregion
        
        #region Fields
        private UIPassengersNumberofinLabel mUIPassengersNumberofinLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIPassengersNumberofinLabel : HtmlLabel
    {
        
        public UIPassengersNumberofinLabel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlLabel.PropertyNames.Id] = "lblPax";
            this.SearchProperties.Add(new PropertyExpression(HtmlLabel.PropertyNames.InnerText, "Number of infants", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlLabel.PropertyNames.Class] = "errContainer";
            this.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "class=\"errContainer\" id=\"lblPax\"";
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UINumberofinfantscannoPane
        {
            get
            {
                if ((this.mUINumberofinfantscannoPane == null))
                {
                    this.mUINumberofinfantscannoPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUINumberofinfantscannoPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Number of infants", PropertyExpressionOperator.Contains));
                    this.mUINumberofinfantscannoPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "val-error";
                    this.mUINumberofinfantscannoPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "class=\"val-error\"", PropertyExpressionOperator.Contains));
                    this.mUINumberofinfantscannoPane.WindowTitles.Add("Search | Villa Plus");
                    #endregion
                }
                return this.mUINumberofinfantscannoPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUINumberofinfantscannoPane;
        #endregion
    }
}
