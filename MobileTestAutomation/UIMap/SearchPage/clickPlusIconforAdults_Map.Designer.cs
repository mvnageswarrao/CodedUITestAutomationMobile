// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.SearchPage.clickPlusIconforAdults_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using System.Configuration;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class clickPlusIconforAdults_Map:logWriter
    {
        
        /// <summary>
        /// clickPlusIconforAdults_Method
        /// </summary>
        public List<object> clickPlusIconforAdults_Method(int MaxOCCUPANCY)
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem2AdultsPane.UIItemPane;
            HtmlControl UIItem2AdultsPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem2AdultsPane;
            #endregion
            string UseConfig = ConfigurationManager.AppSettings["UsePaxFrmConfig"];
            Boolean UseConfigA = Convert.ToBoolean(UseConfig);
            List<object> returnvalues = new List<object>();

            if (UseConfigA == true)
            {
                //***To Be Remove Later, Once above code block started using***//
                string tempdefltNumofadults = ConfigurationManager.AppSettings["NoofAdults"];
                int defltNumofadultsremovelater = Convert.ToInt32(tempdefltNumofadults.ToString());
                //***Up to Here***//

                int Numofitems = MaxOCCUPANCY / 2;
                Random rnd = new Random();
                int randomAdultsNum = defltNumofadultsremovelater;

                Boolean Minustobeclicked = false;
                int NumofAdultSelected = 0;
                string defltadults = UIItem2AdultsPane.InnerText;
                string[] arrdefltadults = defltadults.Split(' ');
                defltadults = arrdefltadults[1].Replace("\r\n", string.Empty);
                int defltNumofadults = Convert.ToInt32(defltadults);


                if (defltNumofadults > randomAdultsNum)
                {
                    Minustobeclicked = true;
                    //NumofAdultSelected = defltNumofadults;
                    NumofAdultSelected = defltNumofadults;

                }
                else
                {
                    while (defltNumofadults != randomAdultsNum)
                    {
                        // Click '+' pane
                        Mouse.Click(uIItemPane);
                        defltNumofadults++;
                    }

                    WriteLogs("PASS : \"" + randomAdultsNum + "\" Adults Selected.");
                    NumofAdultSelected = randomAdultsNum;
                }
                if (Minustobeclicked == true)
                {
                    returnvalues.Add(randomAdultsNum);
                    returnvalues.Add(Minustobeclicked);
                }
                else
                {
                    returnvalues.Add(NumofAdultSelected);
                    returnvalues.Add(Minustobeclicked);
                }
            }
            else
            {
                int Numofitems = MaxOCCUPANCY / 2;
                Random rnd = new Random();
                int randomAdultsNum = rnd.Next(1, Numofitems);

                Boolean Minustobeclicked = false;
                int NumofAdultSelected = 0;
                string defltadults = UIItem2AdultsPane.InnerText;
                string[] arrdefltadults = defltadults.Split(' ');
                defltadults = arrdefltadults[1].Replace("\r\n", string.Empty);
                int defltNumofadults = Convert.ToInt32(defltadults);


                if (defltNumofadults > randomAdultsNum)
                {
                    Minustobeclicked = true;
                    //NumofAdultSelected = defltNumofadults;
                    NumofAdultSelected = defltNumofadults;

                }
                else
                {
                    while (defltNumofadults != randomAdultsNum)
                    {
                        // Click '+' pane
                        Mouse.Click(uIItemPane);
                        defltNumofadults++;
                    }

                    WriteLogs("PASS : \"" + randomAdultsNum + "\" Adults Selected.");
                    NumofAdultSelected = randomAdultsNum;
                }

                returnvalues.Add(NumofAdultSelected);
                returnvalues.Add(Minustobeclicked);
            }
                return returnvalues;
      }

        public int getDefaultAdultsSelected()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem2AdultsPane.UIItemPane;
            HtmlControl UIItem2AdultsPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem2AdultsPane;
            #endregion
            
            string defltadults = UIItem2AdultsPane.InnerText;
            string[] arrdefltadults = defltadults.Split(' ');
            defltadults = arrdefltadults[1].Replace("\r\n", string.Empty);
            int defltNumofadults = Convert.ToInt32(defltadults);

            while (defltNumofadults < 2)
            {
                Mouse.Click(uIItemPane);
                defltadults = UIItem2AdultsPane.InnerText;
                arrdefltadults = defltadults.Split(' ');
                defltadults = arrdefltadults[1].Replace("\r\n", string.Empty);
                defltNumofadults = Convert.ToInt32(defltadults);
            }
            
            return defltNumofadults;
        }

        public void verifyPlusFrAdultsDisabled_Method()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem2AdultsPane.UIItemPane;
            HtmlControl UIItem2AdultsPane = this.UISearchVillaPlusWindoWindow.UISearchVillaPlusDocument.UIItem2AdultsPane;
            #endregion

            string defltAdults = UIItem2AdultsPane.InnerText;
            string[] arrdefltAdults = defltAdults.Split(' ');
            defltAdults = arrdefltAdults[1].Replace("\r\n", string.Empty);
            int defltNumofInfants = Convert.ToInt32(defltAdults);

            Boolean isPlusDisabled = uIItemPane.ControlDefinition.Contains("disabled");

            while (isPlusDisabled != true)
            {
                Mouse.Click(uIItemPane);
                isPlusDisabled = uIItemPane.ControlDefinition.Contains("disabled");
            }
            WriteLogs("PASS : + icon for Adults has been disabled.");

        }
        
        #region Properties
        public UISearchVillaPlusWindoWindow UISearchVillaPlusWindoWindow
        {
            get
            {
                if ((this.mUISearchVillaPlusWindoWindow == null))
                {
                    this.mUISearchVillaPlusWindoWindow = new UISearchVillaPlusWindoWindow();
                }
                return this.mUISearchVillaPlusWindoWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISearchVillaPlusWindoWindow mUISearchVillaPlusWindoWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISearchVillaPlusWindoWindow : BrowserWindow
    {
        
        public UISearchVillaPlusWindoWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Search | Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISearchVillaPlusDocument UISearchVillaPlusDocument
        {
            get
            {
                if ((this.mUISearchVillaPlusDocument == null))
                {
                    this.mUISearchVillaPlusDocument = new UISearchVillaPlusDocument(this);
                }
                return this.mUISearchVillaPlusDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISearchVillaPlusDocument mUISearchVillaPlusDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISearchVillaPlusDocument : HtmlDocument
    {
        
        public UISearchVillaPlusDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Search | Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/search", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/search", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        #region Properties
        public UIItem2AdultsPane UIItem2AdultsPane
        {
            get
            {
                if ((this.mUIItem2AdultsPane == null))
                {
                    this.mUIItem2AdultsPane = new UIItem2AdultsPane(this);
                }
                return this.mUIItem2AdultsPane;
            }
        }
        #endregion
        
        #region Fields
        private UIItem2AdultsPane mUIItem2AdultsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItem2AdultsPane : HtmlDiv
    {
        
        public UIItem2AdultsPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "adultselector";
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Adults", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "minus-plus";
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "class=\"minus-plus\" id=\"adultselector\"", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Search | Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "+";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "icon-plus";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"icon-plus\"";
                    this.mUIItemPane.WindowTitles.Add("Search | Villa Plus");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIItemPane;
        #endregion
    }
}
