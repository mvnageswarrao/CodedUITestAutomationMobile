// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.HomePage.clickNOFrmIncomBkgPopup_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class clickNOFrmIncomBkgPopup_Map:logWriter
    {
        
        /// <summary>
        /// clickNOFrmIncomBkgPopup_Method
        /// </summary>
        public void clickNOFrmIncomBkgPopup_Method()
        {
            #region Variable Declarations
            HtmlDiv uIShroudlightboxPane = this.UIVillaHolidaysThatYouWindow.UIVillaHolidaysThatYouDocument.UIShroudlightboxPane;
            HtmlHyperlink uINOHyperlink = this.UIVillaHolidaysThatYouWindow.UIVillaHolidaysThatYouDocument.UINOHyperlink;
            #endregion
            
            try
            {
                // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
                Playback.PlaybackSettings.ContinueOnError = true;

                // Mouse hover 'shroud-lightbox' pane at (1, 1)
                Mouse.Hover(uIShroudlightboxPane);

                // Reset flag to ensure that play back stops if there is an error.
                Playback.PlaybackSettings.ContinueOnError = false;

                // Click 'No' link
                Mouse.Click(uINOHyperlink, new Point(34, 11));
                WriteLogs("PASS : Clicked \"NO\" Button from InComplete Booking Popup Displayed.");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Could not click \"NO\" button from InComplete Booking Popup Not Displayed. ");
                WriteLogs("----"+ ex.Message.ToString());
            }
        }
        
        #region Properties
        public UIVillaHolidaysThatYouWindow UIVillaHolidaysThatYouWindow
        {
            get
            {
                if ((this.mUIVillaHolidaysThatYouWindow == null))
                {
                    this.mUIVillaHolidaysThatYouWindow = new UIVillaHolidaysThatYouWindow();
                }
                return this.mUIVillaHolidaysThatYouWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaHolidaysThatYouWindow mUIVillaHolidaysThatYouWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaHolidaysThatYouWindow : BrowserWindow
    {
        
        public UIVillaHolidaysThatYouWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "| Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Holidays That You’ll Love More | Villa Plus");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaHolidaysThatYouDocument UIVillaHolidaysThatYouDocument
        {
            get
            {
                if ((this.mUIVillaHolidaysThatYouDocument == null))
                {
                    this.mUIVillaHolidaysThatYouDocument = new UIVillaHolidaysThatYouDocument(this);
                }
                return this.mUIVillaHolidaysThatYouDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaHolidaysThatYouDocument mUIVillaHolidaysThatYouDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaHolidaysThatYouDocument : HtmlDocument
    {
        
        public UIVillaHolidaysThatYouDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "| Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Holidays That You’ll Love More | Villa Plus");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIShroudlightboxPane
        {
            get
            {
                if ((this.mUIShroudlightboxPane == null))
                {
                    this.mUIShroudlightboxPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIShroudlightboxPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "shroud-lightbox";
                    this.mUIShroudlightboxPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"shroud-lightbox\"";
                    this.mUIShroudlightboxPane.WindowTitles.Add("Villa Holidays That You’ll Love More | Villa Plus");
                    #endregion
                }
                return this.mUIShroudlightboxPane;
            }
        }
        
        public HtmlHyperlink UINOHyperlink
        {
            get
            {
                if ((this.mUINOHyperlink == null))
                {
                    this.mUINOHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINOHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "No";
                    this.mUINOHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "No";
                    this.mUINOHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.AbsolutePath, "/", PropertyExpressionOperator.Contains));
                    this.mUINOHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, ".villaplus.com/", PropertyExpressionOperator.Contains));
                    this.mUINOHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "btn bg-orange";
                    this.mUINOHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"btn bg-orange\" id=\"No\" href=\"#\"";
                    this.mUINOHyperlink.WindowTitles.Add("Villa Holidays That You’ll Love More | Villa Plus");
                    #endregion
                }
                return this.mUINOHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIShroudlightboxPane;
        
        private HtmlHyperlink mUINOHyperlink;
        #endregion
    }
}
