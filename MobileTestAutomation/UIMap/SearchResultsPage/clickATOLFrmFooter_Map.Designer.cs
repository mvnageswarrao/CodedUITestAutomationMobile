// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.SearchResultsPage.clickATOLFrmFooter_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class clickATOLFrmFooter_Map:logWriter
    {
        
        /// <summary>
        /// clickATOLFrmFooter_Method
        /// </summary>
        public void clickATOLFrmFooter_Method()
        {
            #region Variable Declarations
            HtmlImage uIATOLImage = this.UIYoursearchfound11VilWindow.UIYoursearchfound11VilDocument.UIFooterlinksPane.UIATOLImage;
            #endregion
            try
            { // Click 'ATOL' image
                Mouse.Click(uIATOLImage, new Point(30, 44));
                WriteLogs("PASS : Clicked ATOL Logo From Footer.");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Could Not Click ATOL Logo From Footer.");
                WriteLogs("--------" + ex.Message.ToString());
            }
        }

        public void verifyATOLPage_Method()
        {
            var browsertab = BrowserWindow.Locate("ATOL Protection | UK Civil Aviation Authority http://www.caa.co.uk/atol-protection/");
            //HtmlImage itemOnNewTab = new HtmlImage(browsertab);
            //itemOnNewTab.SearchProperties.Add(HtmlImage.PropertyNames.Class, "ls-bg");
            HtmlDiv itemOnNewTab = new HtmlDiv(browsertab);
            itemOnNewTab.SearchProperties.Add(HtmlDiv.PropertyNames.Id, "layerslider");
            HtmlImage itemOnNewTaba = new HtmlImage(itemOnNewTab);
            itemOnNewTaba.SearchProperties.Add(HtmlImage.PropertyNames.Class, "ls-bg");


            Boolean isATOLBannerExists = false;
            try
            {
                Assert.IsTrue(itemOnNewTaba.AbsolutePath == "/uploadedImages/CAA/Content/Images/Carousel_Banners/ATOL_banner.jpg");
                isATOLBannerExists = itemOnNewTaba.TryFind();
                if (isATOLBannerExists == true)
                    WriteLogs("PASS : ATOL Website is opened in a New Browser Tab.");
                else
                    WriteLogs("FAIL : ATOL Website is not Opened.");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : ATOL Website is not Opened.");
                WriteLogs("--------" + ex.Message.ToString());
            }
            browsertab.Close();
        }

        public void clickNverifySocialLinks_Method()
        {
            #region Variable Declarations
            BrowserWindow Window = this.UIYoursearchfound11VilWindow;
            #endregion

            HtmlDiv SocialMediaSection = new HtmlDiv(Window);
            SocialMediaSection.SearchProperties.Add(HtmlDiv.PropertyNames.Class, "social");
            SocialMediaSection.SearchProperties.Add(HtmlDiv.PropertyNames.ControlType, "Pane");

            HtmlImage SocialMediaitems = new HtmlImage(SocialMediaSection);
            SocialMediaitems.SearchProperties.Add(HtmlImage.PropertyNames.ClassName, "HtmlImage");

            UITestControlCollection ui = SocialMediaitems.FindMatchingControls();
            String LinkName = string.Empty;
            Boolean isItemExists = false;
            BrowserWindow browsertab = new BrowserWindow();

            try
            {
                foreach (HtmlImage SC in ui)
                {
                    LinkName = SC.Alt.Trim();
                    Mouse.Click(SC);
                    if (LinkName == "Facebook")
                    {
                        try
                        {
                            browsertab = BrowserWindow.Locate("Villa Plus https://www.facebook.com/villaplus");
                            Assert.IsTrue(browsertab.Uri.ToString().Trim() == "https://www.facebook.com/villaplus");
                            isItemExists = browsertab.TryFind();
                            if (isItemExists == true)
                                WriteLogs("PASS : \"" + LinkName + "\" Website is opened in a New Browser Tab.");
                            else
                                WriteLogs("FAIL : \"" + LinkName + "\" Website is not Opened.");
                            browsertab.Close();
                        }
                        catch (Exception ex)
                        {
                            WriteLogs("FAIL : \"" + LinkName + "\" Website is not Opened.");
                            WriteLogs("--------" + ex.Message.ToString());
                            browsertab.Close();
                        }
                    }
                    else if(LinkName == "Twitter")
                    {
                        try
                        {
                            browsertab = BrowserWindow.Locate("Villa Plus (@VillaPlusNews) | Twitter https://twitter.com/VillaPlusNews");
                            Assert.IsTrue(browsertab.Uri.ToString().Trim() == "https://twitter.com/VillaPlusNews");
                            isItemExists = browsertab.TryFind();
                            if (isItemExists == true)
                                WriteLogs("PASS : \"" + LinkName + "\" Website is opened in a New Browser Tab.");
                            else
                                WriteLogs("FAIL : \"" + LinkName + "\" Website is not Opened.");
                            browsertab.Close();
                        }
                        catch (Exception ex)
                        {
                            WriteLogs("FAIL : \"" + LinkName + "\" Website is not Opened.");
                            WriteLogs("--------" + ex.Message.ToString());
                            //browsertab = new BrowserWindow();
                            browsertab.Close();
                        }
                    }
                    else if (LinkName == "Google Plus")
                    {
                        try
                        {
                            browsertab = BrowserWindow.Locate("Villa Plus - Google+ https://plus.google.com/+villaplus");
                            Assert.IsTrue(browsertab.Uri.ToString().Trim() == "https://plus.google.com/+villaplus");
                            isItemExists = browsertab.TryFind();
                            if (isItemExists == true)
                                WriteLogs("PASS : \"" + LinkName + "\" Website is opened in a New Browser Tab.");
                            else
                                WriteLogs("FAIL : \"" + LinkName + "\" Website is not Opened.");
                            browsertab.Close();
                        }
                        catch (Exception ex)
                        {
                            WriteLogs("FAIL : \"" + LinkName + "\" Website is not Opened.");
                            WriteLogs("--------" + ex.Message.ToString());
                            browsertab = new BrowserWindow();
                            browsertab.Close();
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : \""+ LinkName + "\" Website is not Opened.");
                WriteLogs("--------" + ex.Message.ToString());
                browsertab.Close();
            }
        }

        #region Properties
        public UIYoursearchfound11VilWindow UIYoursearchfound11VilWindow
        {
            get
            {
                if ((this.mUIYoursearchfound11VilWindow == null))
                {
                    this.mUIYoursearchfound11VilWindow = new UIYoursearchfound11VilWindow();
                }
                return this.mUIYoursearchfound11VilWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound11VilWindow mUIYoursearchfound11VilWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYoursearchfound11VilWindow : BrowserWindow
    {
        
        public UIYoursearchfound11VilWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your search found", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your search found 11 Villa holidays;");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYoursearchfound11VilDocument UIYoursearchfound11VilDocument
        {
            get
            {
                if ((this.mUIYoursearchfound11VilDocument == null))
                {
                    this.mUIYoursearchfound11VilDocument = new UIYoursearchfound11VilDocument(this);
                }
                return this.mUIYoursearchfound11VilDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound11VilDocument mUIYoursearchfound11VilDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYoursearchfound11VilDocument : HtmlDocument
    {
        
        public UIYoursearchfound11VilDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your search found", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your search found 11 Villa holidays;");
            #endregion
        }
        
        #region Properties
        public UIFooterlinksPane UIFooterlinksPane
        {
            get
            {
                if ((this.mUIFooterlinksPane == null))
                {
                    this.mUIFooterlinksPane = new UIFooterlinksPane(this);
                }
                return this.mUIFooterlinksPane;
            }
        }
        #endregion
        
        #region Fields
        private UIFooterlinksPane mUIFooterlinksPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFooterlinksPane : HtmlDiv
    {
        
        public UIFooterlinksPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "footer-links";
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Book with confidence\r\n\r\nYour money is 10";
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "bg-blue secure";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"bg-blue secure\" id=\"footer-links\"";
            this.WindowTitles.Add("Your search found 11 Villa holidays;");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIATOLImage
        {
            get
            {
                if ((this.mUIATOLImage == null))
                {
                    this.mUIATOLImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIATOLImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "ATOL";
                    this.mUIATOLImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/content/images/atol-logo.svg";
                    this.mUIATOLImage.FilterProperties.Add(new PropertyExpression(HtmlImage.PropertyNames.Src, "/content/images/atol-logo.svg", PropertyExpressionOperator.Contains));
                    this.mUIATOLImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "/default.aspx";
                    this.mUIATOLImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "alt=\"ATOL\" src=\"/content/images/atol-log";
                    this.mUIATOLImage.WindowTitles.Add("Your search found 11 Villa holidays;");
                    #endregion
                }
                return this.mUIATOLImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIATOLImage;
        #endregion
    }
}
