// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.SearchResultsPage.verifySRCAirport_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class verifySRCAirport_Map
    {
        
        /// <summary>
        /// verifySRCAirport_Method - Use 'verifySRCAirport_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public string verifySRCAirport_Method()
        {
            #region Variable Declarations
            HtmlDiv uIItem4Bedrooms3BathroPane = this.UIYoursearchfound1VillWindow.UIYoursearchfound1VillDocument.UISearchresultsPane.UIItem4Bedrooms3BathroPane;
            #endregion

            // Verify that the 'InnerText' property of '4 Bedrooms 3 Bathrooms Sleeps 2 to 9' pane contains '4 Bedrooms
            //3 Bathrooms
            //Sleeps 2 to 9
            //Beach 2 ½ miles
            //Heated Pool 25 x 15 ft
            //Free Air Con
            //Wifi
            //Car Essential
            //East Midlands Airport to Alicante'

            string AirportName = string.Empty;
            string FinalAirport = string.Empty;
            AirportName = uIItem4Bedrooms3BathroPane.InnerText;
            if (AirportName.Contains("Book Villa & Flights"))
            {
                int Air = AirportName.IndexOf("Book Villa Only");

                string AirPo = AirportName.Remove(Air);
                int AirportN = AirPo.LastIndexOf("to");
                string AirP = AirPo.Substring(AirportN).Trim();
                int AirName = AirP.IndexOf("\r\n");
                FinalAirport = AirP.Remove(AirName);
                return FinalAirport;
            }
            else
            {
                return FinalAirport = string.Empty;
                
            }
            //StringAssert.Contains(uIItem4Bedrooms3BathroPane.InnerText, this.verifySRCAirport_MethodExpectedValues.UIItem4Bedrooms3BathroPaneInnerText);
        }
        
        #region Properties
        public virtual verifySRCAirport_MethodExpectedValues verifySRCAirport_MethodExpectedValues
        {
            get
            {
                if ((this.mverifySRCAirport_MethodExpectedValues == null))
                {
                    this.mverifySRCAirport_MethodExpectedValues = new verifySRCAirport_MethodExpectedValues();
                }
                return this.mverifySRCAirport_MethodExpectedValues;
            }
        }
        
        public UIYoursearchfound7VillWindow UIYoursearchfound7VillWindow
        {
            get
            {
                if ((this.mUIYoursearchfound7VillWindow == null))
                {
                    this.mUIYoursearchfound7VillWindow = new UIYoursearchfound7VillWindow();
                }
                return this.mUIYoursearchfound7VillWindow;
            }
        }
        
        public UIYoursearchfound1VillWindow UIYoursearchfound1VillWindow
        {
            get
            {
                if ((this.mUIYoursearchfound1VillWindow == null))
                {
                    this.mUIYoursearchfound1VillWindow = new UIYoursearchfound1VillWindow();
                }
                return this.mUIYoursearchfound1VillWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifySRCAirport_MethodExpectedValues mverifySRCAirport_MethodExpectedValues;
        
        private UIYoursearchfound7VillWindow mUIYoursearchfound7VillWindow;
        
        private UIYoursearchfound1VillWindow mUIYoursearchfound1VillWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifySRCAirport_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class verifySRCAirport_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '4 Bedrooms 3 Bathrooms Sleeps 2 to 9' pane contains '4 Bedrooms
        ///3 Bathrooms
        ///Sleeps 2 to 9
        ///Beach 2 ½ miles
        ///Heated Pool 25 x 15 ft
        ///Free Air Con
        ///Wifi
        ///Car Essential
        ///East Midlands Airport to Alicante'
        /// </summary>
        public string UIItem4Bedrooms3BathroPaneInnerText = "4 Bedrooms\r\n3 Bathrooms\r\nSleeps 2 to 9\r\nBeach 2 ½ miles\r\nHeated Pool 25 x 15 ft\r\n" +
            "Free Air Con\r\nWifi\r\nCar Essential\r\nEast Midlands Airport to Alicante";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIYoursearchfound7VillWindow : WinWindow
    {
        
        public UIYoursearchfound7VillWindow()
        {
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYoursearchfound7VillDocument UIYoursearchfound7VillDocument
        {
            get
            {
                if ((this.mUIYoursearchfound7VillDocument == null))
                {
                    this.mUIYoursearchfound7VillDocument = new UIYoursearchfound7VillDocument(this);
                }
                return this.mUIYoursearchfound7VillDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound7VillDocument mUIYoursearchfound7VillDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIYoursearchfound7VillDocument : HtmlDocument
    {
        
        public UIYoursearchfound7VillDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/search/searchResult", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UISearchresultsPane UISearchresultsPane
        {
            get
            {
                if ((this.mUISearchresultsPane == null))
                {
                    this.mUISearchresultsPane = new UISearchresultsPane(this);
                }
                return this.mUISearchresultsPane;
            }
        }
        #endregion
        
        #region Fields
        private UISearchresultsPane mUISearchresultsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISearchresultsPane : HtmlDiv
    {
        
        public UISearchresultsPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.Id, "search-results", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "id=\"search-results\"", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItem3Bedrooms3BathroPane
        {
            get
            {
                if ((this.mUIItem3Bedrooms3BathroPane == null))
                {
                    this.mUIItem3Bedrooms3BathroPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem3Bedrooms3BathroPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.Class, "col-1 break", PropertyExpressionOperator.Contains));
                    this.mUIItem3Bedrooms3BathroPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "class=\"col-1 break\"", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUIItem3Bedrooms3BathroPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItem3Bedrooms3BathroPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIYoursearchfound1VillWindow : BrowserWindow
    {
        
        public UIYoursearchfound1VillWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.ClassName, "IEFrame", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYoursearchfound1VillDocument UIYoursearchfound1VillDocument
        {
            get
            {
                if ((this.mUIYoursearchfound1VillDocument == null))
                {
                    this.mUIYoursearchfound1VillDocument = new UIYoursearchfound1VillDocument(this);
                }
                return this.mUIYoursearchfound1VillDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound1VillDocument mUIYoursearchfound1VillDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIYoursearchfound1VillDocument : HtmlDocument
    {
        
        public UIYoursearchfound1VillDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/search/searchresult", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UISearchresultsPane1 UISearchresultsPane
        {
            get
            {
                if ((this.mUISearchresultsPane == null))
                {
                    this.mUISearchresultsPane = new UISearchresultsPane1(this);
                }
                return this.mUISearchresultsPane;
            }
        }
        #endregion
        
        #region Fields
        private UISearchresultsPane1 mUISearchresultsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISearchresultsPane1 : HtmlControl
    {
        
        public UISearchresultsPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.ControlType] = "Pane";
            this.SearchProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.Id, "search-results", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.ControlDefinition, "id=\"search-results\"", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItem4Bedrooms3BathroPane
        {
            get
            {
                if ((this.mUIItem4Bedrooms3BathroPane == null))
                {
                    this.mUIItem4Bedrooms3BathroPane = new HtmlDiv(this);
                }
                return this.mUIItem4Bedrooms3BathroPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItem4Bedrooms3BathroPane;
        #endregion
    }
}
