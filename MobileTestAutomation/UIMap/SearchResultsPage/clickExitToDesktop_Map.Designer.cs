// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.SearchResultsPage.clickExitToDesktop_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]

    public partial class clickExitToDesktop_Map:logWriter
    {
        
        /// <summary>
        /// clickExitToDesktop_Method
        /// </summary>
        public void clickExitToDesktop_Method()
        {
            #region Variable Declarations
            HtmlHyperlink uIExittoDesktopWebsiteHyperlink = this.UIYoursearchfound1VillWindow.UIYoursearchfound1VillDocument.UIExittoDesktopWebsiteHyperlink;
            #endregion
            try
            { // Click 'Exit to Desktop Website' link
                Mouse.Click(uIExittoDesktopWebsiteHyperlink, new Point(107, 19));
                WriteLogs("PASS : Clicked \"Exit to Desktop\" From Footer.");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Could Not Click \"Exit to Desktop\" From Footer.");
                WriteLogs("--------" + ex.Message.ToString());
            }
        }

        public void verifyDesktopSitePage_Method()
        {
            var browsertab = BrowserWindow.Locate("Villa Holidays 2016 That You'll Love More | Villa Plus http://www.villaplus.com/");
            HtmlHyperlink itemOnNewTab = new HtmlHyperlink(browsertab);
            itemOnNewTab.SearchProperties.Add(HtmlHyperlink.PropertyNames.Id, "logo");
            Boolean isDesktopSiteOpened = false;
            try
            {
                Assert.IsTrue(itemOnNewTab.Href == "http://www.villaplus.com/");
                isDesktopSiteOpened = itemOnNewTab.TryFind();
                if (isDesktopSiteOpened == true)
                    WriteLogs("PASS : \"Desktop Site\" is opened.");
                else
                    WriteLogs("FAIL : \"Desktop Site\" is not Opened.");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : \"Desktop Site\" is not Opened.");
                WriteLogs("--------" + ex.Message.ToString());
            }

            browsertab.Back();
            WriteLogs("INFO : Clicked \"Back\" From \"Desktop Site\" and Opened \"Mobile Site\".");
        }

        #region Properties
        public UIYoursearchfound1VillWindow UIYoursearchfound1VillWindow
        {
            get
            {
                if ((this.mUIYoursearchfound1VillWindow == null))
                {
                    this.mUIYoursearchfound1VillWindow = new UIYoursearchfound1VillWindow();
                }
                return this.mUIYoursearchfound1VillWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound1VillWindow mUIYoursearchfound1VillWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYoursearchfound1VillWindow : BrowserWindow
    {
        
        public UIYoursearchfound1VillWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your search found", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your search found 1 Villa holidays;");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYoursearchfound1VillDocument UIYoursearchfound1VillDocument
        {
            get
            {
                if ((this.mUIYoursearchfound1VillDocument == null))
                {
                    this.mUIYoursearchfound1VillDocument = new UIYoursearchfound1VillDocument(this);
                }
                return this.mUIYoursearchfound1VillDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound1VillDocument mUIYoursearchfound1VillDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYoursearchfound1VillDocument : HtmlDocument
    {
        
        public UIYoursearchfound1VillDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your search found", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your search found 1 Villa holidays;");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIExittoDesktopWebsiteHyperlink
        {
            get
            {
                if ((this.mUIExittoDesktopWebsiteHyperlink == null))
                {
                    this.mUIExittoDesktopWebsiteHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIExittoDesktopWebsiteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "exit";
                    this.mUIExittoDesktopWebsiteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Exit to Desktop Website";
                    this.mUIExittoDesktopWebsiteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "ExitToDesktop();";
                    this.mUIExittoDesktopWebsiteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:ExitToDesktop();";
                    this.mUIExittoDesktopWebsiteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"exit\" href=\"javascript:ExitToDesktop";
                    this.mUIExittoDesktopWebsiteHyperlink.WindowTitles.Add("Your search found 1 Villa holidays;");
                    #endregion
                }
                return this.mUIExittoDesktopWebsiteHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIExittoDesktopWebsiteHyperlink;
        #endregion
    }
}
