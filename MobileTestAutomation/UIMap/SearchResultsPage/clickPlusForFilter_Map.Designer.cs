// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.SearchResultsPage.clickPlusForFilter_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class clickPlusForFilter_Map
    {

        /// <summary>
        /// clickPlusForFilter_Method
        /// </summary>
        public void clickPlusForFilter_Method()
        {
            #region Variable Declarations
            HtmlSpan uIItemPane = this.UIYoursearchfound4VillWindow.UIYoursearchfound4VillDocument.UIPanelfilterbyCustom.UIItemPane;
            HtmlCustom UIPanelfilterbyCustom = this.UIYoursearchfound4VillWindow.UIYoursearchfound4VillDocument.UIPanelfilterbyCustom;
            #endregion


            //UITestControlCollection qq = UIPanelfilterbyCustom.FindMatchingControls();

            if (UIPanelfilterbyCustom.GetProperty("ClassName").ToString() == "HtmlTag.LI" && UIPanelfilterbyCustom.InnerText == "Villa Destinations")
            {
                Mouse.Click(UIPanelfilterbyCustom);
            }

            UITestControlCollection xx = new UITestControlCollection();
            foreach (UITestControl q in UIPanelfilterbyCustom.GetChildren())
            {
                if (UIPanelfilterbyCustom.GetType() == typeof(HtmlSpan))
                {

                    xx.Add(UIPanelfilterbyCustom);
                }
            }

            //    UIPanelfilterbyCustom.GetType().GetProperty("");

            //string abc = UIPanelfilterbyCustom.InnerText;
            //abc = abc.Replace("\r\n", string.Empty);
            //abc = abc.Replace("  ", "ABCD");
            //string xyz = "Resorts";
            //Mouse.Click();


            //string[] abcArr = abc.Split(' ');

            //for (int i = 0; i<= abcArr.Length;i++)
            //{

            //    if(abcArr[i] == "")
            //    {
            //        Array.Clear(abcArr, i,0);
            //    }

            //}

            //int initTagInstance = Convert.ToInt32(uIItemPane.GetProperty("TagInstance"));

            UITestControlCollection ui = uIItemPane.FindMatchingControls();
            int count = ui.Count;
            foreach (HtmlSpan eachplus in ui)
            {
                //for (int i = initTagInstance; i < count; i++)
                //if (eachplus.GetType() == typeof(HtmlSpan))
                //{

                    //if (eachplus.GetProperty("displaytext").ToString() == "+")
                    //{
                        string controlname = eachplus.InnerText;
                        Mouse.Click(eachplus);
                    //}
              }
          }
        
        
        #region Properties
        public UIYoursearchfound4VillWindow UIYoursearchfound4VillWindow
        {
            get
            {
                if ((this.mUIYoursearchfound4VillWindow == null))
                {
                    this.mUIYoursearchfound4VillWindow = new UIYoursearchfound4VillWindow();
                }
                return this.mUIYoursearchfound4VillWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound4VillWindow mUIYoursearchfound4VillWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIYoursearchfound4VillWindow : BrowserWindow
    {
        
        public UIYoursearchfound4VillWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your search found", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your search found 4 Villa holidays;");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYoursearchfound4VillDocument UIYoursearchfound4VillDocument
        {
            get
            {
                if ((this.mUIYoursearchfound4VillDocument == null))
                {
                    this.mUIYoursearchfound4VillDocument = new UIYoursearchfound4VillDocument(this);
                }
                return this.mUIYoursearchfound4VillDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound4VillDocument mUIYoursearchfound4VillDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIYoursearchfound4VillDocument : HtmlDocument
    {
        
        public UIYoursearchfound4VillDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your search found", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/search/searchresult", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/search/searchresult", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your search found 4 Villa holidays;");
            #endregion
        }
        
        #region Properties
        public UIPanelfilterbyCustom UIPanelfilterbyCustom
        {
            get
            {
                if ((this.mUIPanelfilterbyCustom == null))
                {
                    this.mUIPanelfilterbyCustom = new UIPanelfilterbyCustom(this);
                }
                return this.mUIPanelfilterbyCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelfilterbyCustom mUIPanelfilterbyCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPanelfilterbyCustom : HtmlCustom
    {
        
        public UIPanelfilterbyCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "SECTION";
            this.SearchProperties["Id"] = "panel-filterby";
            this.FilterProperties["Class"] = "filter-panels";
            this.FilterProperties["ControlDefinition"] = "class=\"filter-panels\" id=\"panel-filterby";
            this.WindowTitles.Add("Your search found 4 Villa holidays;");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItemPane.WindowTitles.Add("Your search found 4 Villa holidays;");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIItemPane;
        #endregion
    }
}
