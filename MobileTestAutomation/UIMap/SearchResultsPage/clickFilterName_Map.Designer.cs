// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.SearchResultsPage.clickFilterName_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    using MobileTestAutomation.UIMap.SearchResultsPage.clickScrollFrmFilters_MapClasses;
    using MobileTestAutomation.UIMap.SearchResultsPage.clickPlusForFilter_MapClasses;
    using MobileTestAutomation.UIMap.SearchResultsPage.clickChkBoxFrmFilters_MapClasses;
    using MobileTestAutomation.UIMap.SearchResultsPage.clickApplyFilter_MapClasses;
    using MobileTestAutomation.UIMap.SearchResultsPage.clickFilterBy_MapClasses;
    using MobileTestAutomation.UIMap.SearchResultsPage.clickClearFilter_MapClasses;
    using MobileTestAutomation.UIMap.SearchResultsPage.verifySearchCriteriaDisplay_MapClasses;

    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class clickFilterName_Map:logWriter
    {
        /// <summary>
        /// clickFilterName_Method - Use 'clickFilterName_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void clickFilterName_Method(Dictionary<string, string> objDestValuesFrmDB, Dictionary<string, string> objResortValuesFrmDB,
            Dictionary<string, string> objBedRoomValuesFrmDB, Dictionary<string, string> objVillaTypeValuesFrmDB, Dictionary<string, string> objVillaDetailValuesFrmDB)
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UIYoursearchfound24VilWindow.UIYoursearchfound24VilDocument.UIPanelfilterbyCustom.UIItemCustom;
            #endregion
                        
            clickScrollFrmFilters_Map Scroll = new clickScrollFrmFilters_Map();
            clickChkBoxFrmFilters_Map chkBx = new clickChkBoxFrmFilters_Map();
            clickApplyFilter_Map BtnApplyFilter = new clickApplyFilter_Map();
            clickFilterBy_Map ClickFilterBy = new clickFilterBy_Map();
            clickClearFilter_Map ClickClearFiletr = new clickClearFilter_Map();
            verifySearchCriteriaDisplay_Map VillaCountonSRPage = new verifySearchCriteriaDisplay_Map();

            UITestControlCollection ui = uIItemCustom.FindMatchingControls();
            int cnt = ui.Count;
            try
            {
                Point PreviousPoint = new Point();
                foreach (UITestControl aa in ui)
                {
                    Mouse.Move(PreviousPoint);
                    Mouse.Click(PreviousPoint);
                    //Keyboard.SendKeys("{ESC}");
                    Scroll.clickScrollFrmFilters_Method();
                    string filtertext = aa.GetProperty("innertext").ToString().Trim();
                    Dictionary<string, string> GenericList = new Dictionary<string, string>();
                    switch (filtertext)
                    {
                        case "Villa Destinations":
                            GenericList = objDestValuesFrmDB;
                            break;
                        case "Resorts":
                            GenericList = objResortValuesFrmDB;
                            break;
                        case "Villa Type":
                            GenericList = objVillaTypeValuesFrmDB;
                            break;
                        case "Bedroom size":
                            GenericList = objBedRoomValuesFrmDB;
                            break;
                        case "Villa Details":
                            GenericList = objVillaDetailValuesFrmDB;
                            break;
                    }
                    var btnPosition = aa.BoundingRectangle;
                    Point relativePoint = new Point(btnPosition.X+100 , btnPosition.Y +10);
                    Mouse.Move(relativePoint);
                    PreviousPoint = relativePoint;
                    aa.WaitForControlEnabled(300000);
                    Mouse.Click(relativePoint);
                    WriteLogs("INFO : Clicked " + filtertext +" filter.");
                    Scroll.clickScrollFrmFilters_Method();
                    chkBx.clickChkBoxFrmFilters_Method(filtertext, GenericList);
                    BtnApplyFilter.clickApplyFilter_Method();
                    ClickFilterBy.clickFilterBy_Method();
                    ClickClearFiletr.clickClearFilter_Method();
                    ClickFilterBy.clickFilterBy_Method();
                }
            }
            catch(Exception ex)
            {
                WriteLogs("FAIL: " + ex.Message.ToString());
            }
        }
        
        #region Properties
        public virtual clickFilterName_MethodExpectedValues clickFilterName_MethodExpectedValues
        {
            get
            {
                if ((this.mclickFilterName_MethodExpectedValues == null))
                {
                    this.mclickFilterName_MethodExpectedValues = new clickFilterName_MethodExpectedValues();
                }
                return this.mclickFilterName_MethodExpectedValues;
            }
        }
        
        public UIYoursearchfound24VilWindow UIYoursearchfound24VilWindow
        {
            get
            {
                if ((this.mUIYoursearchfound24VilWindow == null))
                {
                    this.mUIYoursearchfound24VilWindow = new UIYoursearchfound24VilWindow();
                }
                return this.mUIYoursearchfound24VilWindow;
            }
        }
        #endregion
        
        #region Fields
        private clickFilterName_MethodExpectedValues mclickFilterName_MethodExpectedValues;
        
        private UIYoursearchfound24VilWindow mUIYoursearchfound24VilWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'clickFilterName_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class clickFilterName_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of custom control equals 'Villa Destinations '
        /// </summary>
        public string UIItemCustomInnerText = "Villa Destinations ";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYoursearchfound24VilWindow : BrowserWindow
    {
        
        public UIYoursearchfound24VilWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your search found", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your search found 24 Villa holidays;");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYoursearchfound24VilDocument UIYoursearchfound24VilDocument
        {
            get
            {
                if ((this.mUIYoursearchfound24VilDocument == null))
                {
                    this.mUIYoursearchfound24VilDocument = new UIYoursearchfound24VilDocument(this);
                }
                return this.mUIYoursearchfound24VilDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound24VilDocument mUIYoursearchfound24VilDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYoursearchfound24VilDocument : HtmlDocument
    {
        
        public UIYoursearchfound24VilDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your search found", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/search/searchresult";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/search/searchresult", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your search found 24 Villa holidays;");
            #endregion
        }
        
        #region Properties
        public UIPanelfilterbyCustom UIPanelfilterbyCustom
        {
            get
            {
                if ((this.mUIPanelfilterbyCustom == null))
                {
                    this.mUIPanelfilterbyCustom = new UIPanelfilterbyCustom(this);
                }
                return this.mUIPanelfilterbyCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelfilterbyCustom mUIPanelfilterbyCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelfilterbyCustom : HtmlCustom
    {
        
        public UIPanelfilterbyCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "SECTION";
            this.SearchProperties["Id"] = "panel-filterby";
            this.FilterProperties["Class"] = "filter-panels";
            this.FilterProperties["ControlDefinition"] = "class=\"filter-panels\" id=\"panel-filterby";
            this.WindowTitles.Add("Your search found 24 Villa holidays;");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "H2";
                    this.mUIItemCustom.WindowTitles.Add("Your search found 24 Villa holidays;");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
}
