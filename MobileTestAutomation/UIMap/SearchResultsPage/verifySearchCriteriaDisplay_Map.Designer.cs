// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.SearchResultsPage.verifySearchCriteriaDisplay_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class verifySearchCriteriaDisplay_Map:logWriter
    {
        
        /// <summary>
        /// verifySearchCriteriaDisplay_Method - Use 'verifySearchCriteriaDisplay_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifySearchCriteriaDisplay_Method(int VillaCOUNT, int NUMOFAdultsSelected, int NUMOFChildSelected, int NUMOFInfantsSelected, DateTime SelectableDATE, string selectedDURATION, string SelectedARRPORT)
        {
            #region Variable Declarations
            HtmlDiv uIHeaderMsgPane = this.UIYoursearchfound5VillWindow.UIYoursearchfound5VillDocument.UIHeaderMsgPane;
            #endregion

            string TxtFrmPage = uIHeaderMsgPane.InnerText;
            string ShortExpText = VillaCOUNT + " villa";
            //string TxtFromDB = VillaCOUNT + " villas results for: " + NUMOFAdultsSelected + "Adults, " + NUMOFChildSelected + " Child and " + NUMOFInfantsSelected + " Infants on " + SelectableDATE + " for " + selectedDURATION + " nights from " + SelectedARRPORT;

            try
            {
                StringAssert.Contains(TxtFrmPage, ShortExpText);
                //Assert.AreEqual(this.verifySearchCriteriaDisplay_MethodExpectedValues.UIHeaderMsgPaneInnerText, uIHeaderMsgPane.InnerText);
                WriteLogs("PASS : \"Villa Count\" for the selected Search Criteria is Matched. : VERIFICATION");
            }
            catch(Exception)
            {
                WriteLogs("FAIL : \"Villa Count\" for the selected Search Criteria is NOT Matched.");
            }
        }

        public void verifyVillaCountForallFilters_Method(string FilterTypeName, string FilterChkBoxName, string VillaCntForFiltercount)
        {
            #region Variable Declarations
            HtmlDiv uIHeaderMsgPane = this.UIYoursearchfound5VillWindow.UIYoursearchfound5VillDocument.UIHeaderMsgPane;
            #endregion

            string CntFrmPage = uIHeaderMsgPane.InnerText.Trim();
            string[] ArrCntFrmPage = CntFrmPage.Split(' ');
            CntFrmPage = ArrCntFrmPage[0].Trim();

            try
            {
                Assert.AreEqual(VillaCntForFiltercount, CntFrmPage);
                WriteLogs("PASS : Filter Type \""+ FilterTypeName + "\" >> Villa Count \""+ VillaCntForFiltercount + " for the selected Filter \""+ FilterChkBoxName + "\" is Matched.");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Filter Type \"" + FilterTypeName + "\" >> Villa Count \" for the selected Filter \"" + FilterChkBoxName + "\" is NOT Matched." + ex.ToString());
            }
        }

        #region Properties
        public virtual verifySearchCriteriaDisplay_MethodExpectedValues verifySearchCriteriaDisplay_MethodExpectedValues
        {
            get
            {
                if ((this.mverifySearchCriteriaDisplay_MethodExpectedValues == null))
                {
                    this.mverifySearchCriteriaDisplay_MethodExpectedValues = new verifySearchCriteriaDisplay_MethodExpectedValues();
                }
                return this.mverifySearchCriteriaDisplay_MethodExpectedValues;
            }
        }
        
        public UIYoursearchfound5VillWindow UIYoursearchfound5VillWindow
        {
            get
            {
                if ((this.mUIYoursearchfound5VillWindow == null))
                {
                    this.mUIYoursearchfound5VillWindow = new UIYoursearchfound5VillWindow();
                }
                return this.mUIYoursearchfound5VillWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifySearchCriteriaDisplay_MethodExpectedValues mverifySearchCriteriaDisplay_MethodExpectedValues;
        
        private UIYoursearchfound5VillWindow mUIYoursearchfound5VillWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifySearchCriteriaDisplay_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class verifySearchCriteriaDisplay_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'HeaderMsg' pane equals '5 villas results for: 4 Adults, 1 Child and 3 Infants on Wednesday 15 July 2015 for 7 nights from Bournemouth'
        /// </summary>
        public string UIHeaderMsgPaneInnerText = "5 villas results for: 4 Adults, 1 Child and 3 Infants on Wednesday 15 July 2015 f" +
            "or 7 nights from Bournemouth";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIYoursearchfound5VillWindow : BrowserWindow
    {
        
        public UIYoursearchfound5VillWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Your search found", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Your search found 5 Villa holidays;");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIYoursearchfound5VillDocument UIYoursearchfound5VillDocument
        {
            get
            {
                if ((this.mUIYoursearchfound5VillDocument == null))
                {
                    this.mUIYoursearchfound5VillDocument = new UIYoursearchfound5VillDocument(this);
                }
                return this.mUIYoursearchfound5VillDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIYoursearchfound5VillDocument mUIYoursearchfound5VillDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIYoursearchfound5VillDocument : HtmlDocument
    {
        
        public UIYoursearchfound5VillDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Your search found", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/search/searchresult", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/search/searchresult", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Your search found 5 Villa holidays;");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIHeaderMsgPane
        {
            get
            {
                if ((this.mUIHeaderMsgPane == null))
                {
                    this.mUIHeaderMsgPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIHeaderMsgPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "HeaderMsg";
                    this.mUIHeaderMsgPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIHeaderMsgPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "villas results for: ", PropertyExpressionOperator.Contains));
                    this.mUIHeaderMsgPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"HeaderMsg\"";
                    this.mUIHeaderMsgPane.WindowTitles.Add("Your search found 5 Villa holidays;");
                    #endregion
                }
                return this.mUIHeaderMsgPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIHeaderMsgPane;
        #endregion
    }
}
