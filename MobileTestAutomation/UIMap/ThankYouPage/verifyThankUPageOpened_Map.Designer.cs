// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.PaymentPage.verifyThankUPageOpened_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class verifyThankUPageOpened_Map:logWriter
    {
        
        /// <summary>
        /// verifyThankUPageOpened_Method - Use 'verifyThankUPageOpened_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verifyThankUPageOpened_Method()
        {
            #region Variable Declarations
            HtmlDiv uIPanCallbackNotificatPane = this.UIVillaPlusThankYouIntWindow.UIVillaPlusThankYouDocument.UIPanCallbackNotificatPane;
            #endregion

            string TxtFrmPage = uIPanCallbackNotificatPane.InnerText;
            int indx = TxtFrmPage.LastIndexOf("is");
            string RefNum = TxtFrmPage.Substring(indx).Replace("is","").Trim();
            
            TxtFrmPage = TxtFrmPage.Replace("\r\n", "");
            TxtFrmPage = TxtFrmPage.Replace(" ", "");
            string ExpTxt = "Thanks!You'realmostthere";

            //string Pattern = @"Yourbookingreferencenumberis(.*?)";
            //Regex exBookingRef = new Regex(Pattern, RegexOptions.IgnoreCase);
            //string BookingRef = exBookingRef.Match(Pattern).Value.Trim().ToString();

            
            try
            {
                //StringAssert.Contains(uIPanCallbackNotificatPane.InnerText, this.verifyThankUPageOpened_MethodExpectedValues.UIPanCallbackNotificatPaneInnerText);
                StringAssert.Contains(TxtFrmPage, ExpTxt);
                WriteLogs("PASS : \"Thank You\" Page is Opened. : VERIFICATION");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Could Not Open \"Thank You\" Page.");
                WriteLogs("--------" + ex.Message.ToString());
            }

            // Verify that the 'InnerText' property of 'panCallbackNotification' pane contains 'Thanks! You're going on holiday
            //
            //Thank you for choosing Villa Plus.
            //Your booking reference number is E000DB 
            //Please find below a copy of your Holiday Confirmation, which will also be sent to your email.'
            //StringAssert.Contains(uIPanCallbackNotificatPane.InnerText, this.verifyThankUPageOpened_MethodExpectedValues.UIPanCallbackNotificatPaneInnerText);
        }
        
        #region Properties
        public virtual verifyThankUPageOpened_MethodExpectedValues verifyThankUPageOpened_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyThankUPageOpened_MethodExpectedValues == null))
                {
                    this.mverifyThankUPageOpened_MethodExpectedValues = new verifyThankUPageOpened_MethodExpectedValues();
                }
                return this.mverifyThankUPageOpened_MethodExpectedValues;
            }
        }
        
        public UIVillaPlusThankYouIntWindow UIVillaPlusThankYouIntWindow
        {
            get
            {
                if ((this.mUIVillaPlusThankYouIntWindow == null))
                {
                    this.mUIVillaPlusThankYouIntWindow = new UIVillaPlusThankYouIntWindow();
                }
                return this.mUIVillaPlusThankYouIntWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyThankUPageOpened_MethodExpectedValues mverifyThankUPageOpened_MethodExpectedValues;
        
        private UIVillaPlusThankYouIntWindow mUIVillaPlusThankYouIntWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyThankUPageOpened_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class verifyThankUPageOpened_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'panCallbackNotification' pane contains 'Thanks! You're going on holiday
        ///
        ///Thank you for choosing Villa Plus.
        ///Your booking reference number is E000DB 
        ///Please find below a copy of your Holiday Confirmation, which will also be sent to your email.'
        /// </summary>
        public string UIPanCallbackNotificatPaneInnerText = "Thanks! You\'re going on holiday\r\n\r\nThank you for choosing Villa Plus.\r\nYour booki" +
            "ng reference number is E000DB \r\nPlease find below a copy of your Holiday Confirm" +
            "ation, which will also be sent to your email.";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaPlusThankYouIntWindow : BrowserWindow
    {
        
        public UIVillaPlusThankYouIntWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Plus | Thank You");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPlusThankYouDocument UIVillaPlusThankYouDocument
        {
            get
            {
                if ((this.mUIVillaPlusThankYouDocument == null))
                {
                    this.mUIVillaPlusThankYouDocument = new UIVillaPlusThankYouDocument(this);
                }
                return this.mUIVillaPlusThankYouDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusThankYouDocument mUIVillaPlusThankYouDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaPlusThankYouDocument : HtmlDocument
    {
        
        public UIVillaPlusThankYouDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "book";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/booking/ThankYou", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/booking/ThankYou", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus | Thank You");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPanCallbackNotificatPane
        {
            get
            {
                if ((this.mUIPanCallbackNotificatPane == null))
                {
                    this.mUIPanCallbackNotificatPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPanCallbackNotificatPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "panCallbackNotification";
                    this.mUIPanCallbackNotificatPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Thanks!", PropertyExpressionOperator.Contains));
                    this.mUIPanCallbackNotificatPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "callback tm50";
                    this.mUIPanCallbackNotificatPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"callback tm50\" id=\"panCallbackNotification\"";
                    this.mUIPanCallbackNotificatPane.WindowTitles.Add("Villa Plus | Thank You");
                    #endregion
                }
                return this.mUIPanCallbackNotificatPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPanCallbackNotificatPane;
        #endregion
    }
}
