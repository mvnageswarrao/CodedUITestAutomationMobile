// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.LeadPaxPage.enterAddressManually_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    using MobileTestAutomation.UIMap.LeadPaxPage.clickContinueBtnFrmLeadPax_MapClasses;
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class enterAddressManually_Map:logWriter
    {

        clickContinueBtnFrmLeadPax_Map Continue = new clickContinueBtnFrmLeadPax_Map();
        /// <summary>
        /// enterAddressManually_Method - Use 'enterAddressManually_MethodParams' to pass parameters into this method.
        /// </summary>
        public void enterAddressManually_Method()
        {
            #region Variable Declarations
            HtmlEdit uIStreetEdit = this.UIVillaPlusLeadPassengWindow.UIVillaPlusLeadPassengDocument.UIStreetEdit;
            HtmlEdit uITownCityEdit = this.UIVillaPlusLeadPassengWindow.UIVillaPlusLeadPassengDocument.UITownCityEdit;
            HtmlEdit uIPostcodeEdit = this.UIVillaPlusLeadPassengWindow.UIVillaPlusLeadPassengDocument.UIPostcodeEdit;
            #endregion

            clickContinueBtnFrmLeadPax_Map Continue = new clickContinueBtnFrmLeadPax_Map();

            try
            {
                // Type 'Test Street' in 'Street*' text box
                uIStreetEdit.SetFocus();
                //uIStreetEdit.Text = this.enterAddressManually_MethodParams.UIStreetEditText;
                Keyboard.SendKeys(uIStreetEdit, "Test Street");


                Keyboard.SendKeys("{Tab}");
                Keyboard.SendKeys("{Tab}");
                Keyboard.SendKeys("{Tab}");
                Keyboard.SendKeys("{Tab}");

                uITownCityEdit.SetFocus();
               
                // Type 'Test Town' in 'Town/City*' text box
                //uITownCityEdit.Text = this.enterAddressManually_MethodParams.UITownCityEditText;
                Keyboard.SendKeys(uITownCityEdit, "Test Town");

                Continue.ScrollLeadPax_Method();
                
                //Keyboard.SendKeys("{Tab}");
                //Keyboard.SendKeys("{Tab}");
                //Keyboard.SendKeys("{Tab}");
                Keyboard.SendKeys("{END}");


                // Type 'Test PostCode' in 'Postcode*' text box
                uIPostcodeEdit.SetFocus();

                System.Threading.Thread.Sleep(500);
                //uIPostcodeEdit.Text = this.enterAddressManually_MethodParams.UIPostcodeEditText;
                Keyboard.SendKeys(uIPostcodeEdit, "Test PostCode");
                
                WriteLogs("INFO : Entered Address details Manually.");
            }
            catch (Exception ex)
            {
                WriteLogs("INFO : Could NOT Enter Address details Manually.");
                WriteLogs("--------" + ex.Message.ToString());
            }       
        }

        public void enterStreet_Method()
        {
            #region Variable Declarations
            HtmlEdit uIStreetEdit = this.UIVillaPlusLeadPassengWindow.UIVillaPlusLeadPassengDocument.UIStreetEdit;
            HtmlEdit uITownCityEdit = this.UIVillaPlusLeadPassengWindow.UIVillaPlusLeadPassengDocument.UITownCityEdit;
            HtmlEdit uIPostcodeEdit = this.UIVillaPlusLeadPassengWindow.UIVillaPlusLeadPassengDocument.UIPostcodeEdit;
            #endregion

            try
            {
                // Type 'Test Street' in 'Street*' text box
                uIStreetEdit.SetFocus();
                uIStreetEdit.Text = this.enterAddressManually_MethodParams.UIStreetEditText;
               WriteLogs("INFO : Entered Street details Manually.");
            }
            catch (Exception ex)
            {
                WriteLogs("INFO : Could NOT Enter Street details Manually.");
                WriteLogs("--------" + ex.Message.ToString());
            }
        }

        public void enterTownCity_Method()
        {
            #region Variable Declarations
            HtmlEdit uIStreetEdit = this.UIVillaPlusLeadPassengWindow.UIVillaPlusLeadPassengDocument.UIStreetEdit;
            HtmlEdit uITownCityEdit = this.UIVillaPlusLeadPassengWindow.UIVillaPlusLeadPassengDocument.UITownCityEdit;
            HtmlEdit uIPostcodeEdit = this.UIVillaPlusLeadPassengWindow.UIVillaPlusLeadPassengDocument.UIPostcodeEdit;
            #endregion

            try
            {
                Keyboard.SendKeys("{Tab}");
                Keyboard.SendKeys("{Tab}");
                Keyboard.SendKeys("{Tab}");
                Keyboard.SendKeys("{Tab}");

                uITownCityEdit.SetFocus();
                Keyboard.SendKeys(uITownCityEdit, "Test Town");
                WriteLogs("INFO : Entered Town details Manually.");
            }
            catch (Exception ex)
            {
                WriteLogs("INFO : Could NOT Enter Town details Manually.");
                WriteLogs("--------" + ex.Message.ToString());
            }
        }

        public void enterPostCodeManually_Method()
        {
            #region Variable Declarations
            HtmlEdit uIStreetEdit = this.UIVillaPlusLeadPassengWindow.UIVillaPlusLeadPassengDocument.UIStreetEdit;
            HtmlEdit uITownCityEdit = this.UIVillaPlusLeadPassengWindow.UIVillaPlusLeadPassengDocument.UITownCityEdit;
            HtmlEdit uIPostcodeEdit = this.UIVillaPlusLeadPassengWindow.UIVillaPlusLeadPassengDocument.UIPostcodeEdit;
            #endregion

            Continue.ScrollLeadPax_Method();
            
            try
            {
                uIPostcodeEdit.SetFocus();
                Keyboard.SendKeys(uIPostcodeEdit, "Test PostCode");
                WriteLogs("INFO : Entered Post Code Manually.");
            }
            catch (Exception ex)
            {
                WriteLogs("INFO : Could NOT Enter Post Code Manually.");
                WriteLogs("--------" + ex.Message.ToString());
            }
        }

        #region Properties
        public virtual enterAddressManually_MethodParams enterAddressManually_MethodParams
        {
            get
            {
                if ((this.menterAddressManually_MethodParams == null))
                {
                    this.menterAddressManually_MethodParams = new enterAddressManually_MethodParams();
                }
                return this.menterAddressManually_MethodParams;
            }
        }
        
        public UIVillaPlusLeadPassengWindow UIVillaPlusLeadPassengWindow
        {
            get
            {
                if ((this.mUIVillaPlusLeadPassengWindow == null))
                {
                    this.mUIVillaPlusLeadPassengWindow = new UIVillaPlusLeadPassengWindow();
                }
                return this.mUIVillaPlusLeadPassengWindow;
            }
        }
        #endregion
        
        #region Fields
        private enterAddressManually_MethodParams menterAddressManually_MethodParams;
        
        private UIVillaPlusLeadPassengWindow mUIVillaPlusLeadPassengWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'enterAddressManually_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class enterAddressManually_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Test Street' in 'Street*' text box
        /// </summary>
        public string UIStreetEditText = "Test Street";
        
        /// <summary>
        /// Type 'Test Town' in 'Town/City*' text box
        /// </summary>
        public string UITownCityEditText = "Test Town";
        
        /// <summary>
        /// Type 'Test PostCode' in 'Postcode*' text box
        /// </summary>
        public string UIPostcodeEditText = "Test PostCode";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaPlusLeadPassengWindow : BrowserWindow
    {
        
        public UIVillaPlusLeadPassengWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Plus | Lead Passenger");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPlusLeadPassengDocument UIVillaPlusLeadPassengDocument
        {
            get
            {
                if ((this.mUIVillaPlusLeadPassengDocument == null))
                {
                    this.mUIVillaPlusLeadPassengDocument = new UIVillaPlusLeadPassengDocument(this);
                }
                return this.mUIVillaPlusLeadPassengDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusLeadPassengDocument mUIVillaPlusLeadPassengDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaPlusLeadPassengDocument : HtmlDocument
    {
        
        public UIVillaPlusLeadPassengDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "book";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/booking/lead-passenger", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/booking/lead-passenger", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus | Lead Passenger");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIStreetEdit
        {
            get
            {
                if ((this.mUIStreetEdit == null))
                {
                    this.mUIStreetEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIStreetEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtStreet";
                    this.mUIStreetEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "AddressModel.UKAddress.Street";
                    this.mUIStreetEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Street*  ";
                    this.mUIStreetEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIStreetEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"AddressModel.UKAddress.Street\" id=";
                    this.mUIStreetEdit.WindowTitles.Add("Villa Plus | Lead Passenger");
                    #endregion
                }
                return this.mUIStreetEdit;
            }
        }
        
        public HtmlEdit UITownCityEdit
        {
            get
            {
                if ((this.mUITownCityEdit == null))
                {
                    this.mUITownCityEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITownCityEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtTown";
                    this.mUITownCityEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "AddressModel.UKAddress.Town";
                    this.mUITownCityEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Town/City*  ";
                    this.mUITownCityEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITownCityEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"AddressModel.UKAddress.Town\" id=\"t";
                    this.mUITownCityEdit.WindowTitles.Add("Villa Plus | Lead Passenger");
                    #endregion
                }
                return this.mUITownCityEdit;
            }
        }
        
        public HtmlEdit UIPostcodeEdit
        {
            get
            {
                if ((this.mUIPostcodeEdit == null))
                {
                    this.mUIPostcodeEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPostcodeEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtUKPostCode";
                    this.mUIPostcodeEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "AddressModel.UKAddress.Postcode";
                    this.mUIPostcodeEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Postcode*  ";
                    this.mUIPostcodeEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPostcodeEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"AddressModel.UKAddress.Postcode\" i";
                    this.mUIPostcodeEdit.WindowTitles.Add("Villa Plus | Lead Passenger");
                    #endregion
                }
                return this.mUIPostcodeEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIStreetEdit;
        
        private HtmlEdit mUITownCityEdit;
        
        private HtmlEdit mUIPostcodeEdit;
        #endregion
    }
}
