// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.LeadPaxPage.verifyPaymentPageOpened_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class verifyPaymentPageOpened_Map:logWriter
    {
        public bool verifyPaymentPageOpened_Method()
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UIVillaPlusPaymentInteWindow.UIVillaPlusPaymentDocument.UIDivFormContainerMainPane.UIItemCustom;
            #endregion
            Boolean ifpageOpened = false;
            string TxtFrmPage = uIItemCustom.InnerText;
            TxtFrmPage = TxtFrmPage.Replace("\r\n", "");
            TxtFrmPage = TxtFrmPage.Replace(" ", "");
            string ExpTxt = "Amounttopay";
            try
            {
                StringAssert.Contains(uIItemCustom.InnerText, this.verifyPaymentPageOpened_MethodExpectedValues.UIItemCustomInnerText);
                if(TxtFrmPage.Contains(ExpTxt))
                {
                    ifpageOpened = uIItemCustom.TryFind();
                }
                WriteLogs("PASS : \"Payment\" Page is Opened. : VERIFICATION");
            }
            catch (Exception ex)
            {
                WriteLogs("INFO : Could Not Open \"Payment\" Page.");
                WriteLogs("--------" + ex.Message.ToString());
            }
            return ifpageOpened;
        }
        
        #region Properties
        public virtual verifyPaymentPageOpened_MethodExpectedValues verifyPaymentPageOpened_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyPaymentPageOpened_MethodExpectedValues == null))
                {
                    this.mverifyPaymentPageOpened_MethodExpectedValues = new verifyPaymentPageOpened_MethodExpectedValues();
                }
                return this.mverifyPaymentPageOpened_MethodExpectedValues;
            }
        }
        
        public UIVillaPlusPaymentInteWindow UIVillaPlusPaymentInteWindow
        {
            get
            {
                if ((this.mUIVillaPlusPaymentInteWindow == null))
                {
                    this.mUIVillaPlusPaymentInteWindow = new UIVillaPlusPaymentInteWindow();
                }
                return this.mUIVillaPlusPaymentInteWindow;
            }
        }
        #endregion
        
        #region Fields
        private verifyPaymentPageOpened_MethodExpectedValues mverifyPaymentPageOpened_MethodExpectedValues;
        
        private UIVillaPlusPaymentInteWindow mUIVillaPlusPaymentInteWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verifyPaymentPageOpened_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class verifyPaymentPageOpened_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of custom control contains 'Amount to pay'
        /// </summary>
        public string UIItemCustomInnerText = "Amount to pay";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaPlusPaymentInteWindow : BrowserWindow
    {
        
        public UIVillaPlusPaymentInteWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Plus | Payment");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPlusPaymentDocument UIVillaPlusPaymentDocument
        {
            get
            {
                if ((this.mUIVillaPlusPaymentDocument == null))
                {
                    this.mUIVillaPlusPaymentDocument = new UIVillaPlusPaymentDocument(this);
                }
                return this.mUIVillaPlusPaymentDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusPaymentDocument mUIVillaPlusPaymentDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaPlusPaymentDocument : HtmlDocument
    {
        
        public UIVillaPlusPaymentDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "book";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/booking/payment", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/booking/payment", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus | Payment");
            #endregion
        }
        
        #region Properties
        public UIDivFormContainerMainPane UIDivFormContainerMainPane
        {
            get
            {
                if ((this.mUIDivFormContainerMainPane == null))
                {
                    this.mUIDivFormContainerMainPane = new UIDivFormContainerMainPane(this);
                }
                return this.mUIDivFormContainerMainPane;
            }
        }
        #endregion
        
        #region Fields
        private UIDivFormContainerMainPane mUIDivFormContainerMainPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDivFormContainerMainPane : HtmlDiv
    {
        
        public UIDivFormContainerMainPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "divFormContainerMain";
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "You missed a few details", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"divFormContainerMain\"";
            this.WindowTitles.Add("Villa Plus | Payment");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "SECTION";
                    this.mUIItemCustom.FilterProperties["Class"] = "booking-step";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"booking-step\"";
                    this.mUIItemCustom.WindowTitles.Add("Villa Plus | Payment");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
}
