// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.LeadPaxPage.VerifyPostCodeErrPopup_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class VerifyPostCodeErrPopup_Map:logWriter
    {
        
        /// <summary>
        /// VerifyPostCodeErrPopup_Method - Use 'VerifyPostCodeErrPopup_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public bool VerifyPostCodeErrPopup_Method()
        {
            #region Variable Declarations
            HtmlCustom uINoResultforthepostcoCustom = this.UIVillaPlusLeadPassengWindow.UIVillaPlusLeadPassengDocument.UIPanPostCodeErrorPopUCustom.UINoResultforthepostcoCustom;
            #endregion

            Boolean isPostCodeErrPopupShown = false;
            string ActTxt = "NoResultforthepostcodeentered.Pleaseentercorrectpostcodeandtryagainoraddyouraddressmanually.";
            string ExpTxt = uINoResultforthepostcoCustom.InnerText;
            if(ExpTxt!=null)
            {
                ExpTxt = ExpTxt.Replace("\r\n", "").Replace(" ", "");
            }           

            var btnPosition = uINoResultforthepostcoCustom.BoundingRectangle;
            Point relativePoint = new Point();
            relativePoint = new Point(btnPosition.X, btnPosition.Y);

            
            try
            {
                if (relativePoint.X==0)
                {
                    isPostCodeErrPopupShown = false;
                }
                else
                {
                    isPostCodeErrPopupShown = true;
                }
                Assert.AreEqual(ExpTxt.Trim(), ActTxt.Trim());
                WriteLogs("INFO : Shown \"Post Code\" Error Popup.");
            }
            catch (Exception ex)
            {
                WriteLogs("INFO : Could NOT FInd \"Post Code\" Error Popup.");
                WriteLogs("--------" + ex.Message.ToString());
            }
            return isPostCodeErrPopupShown;
        }
        
        #region Properties
        public virtual VerifyPostCodeErrPopup_MethodExpectedValues VerifyPostCodeErrPopup_MethodExpectedValues
        {
            get
            {
                if ((this.mVerifyPostCodeErrPopup_MethodExpectedValues == null))
                {
                    this.mVerifyPostCodeErrPopup_MethodExpectedValues = new VerifyPostCodeErrPopup_MethodExpectedValues();
                }
                return this.mVerifyPostCodeErrPopup_MethodExpectedValues;
            }
        }
        
        public UIVillaPlusLeadPassengWindow UIVillaPlusLeadPassengWindow
        {
            get
            {
                if ((this.mUIVillaPlusLeadPassengWindow == null))
                {
                    this.mUIVillaPlusLeadPassengWindow = new UIVillaPlusLeadPassengWindow();
                }
                return this.mUIVillaPlusLeadPassengWindow;
            }
        }
        #endregion
        
        #region Fields
        private VerifyPostCodeErrPopup_MethodExpectedValues mVerifyPostCodeErrPopup_MethodExpectedValues;
        
        private UIVillaPlusLeadPassengWindow mUIVillaPlusLeadPassengWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifyPostCodeErrPopup_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class VerifyPostCodeErrPopup_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'No Result for the postcode entered.Pleas' custom control equals 'No Result for the postcode entered.Please enter correct postcode and try again or add your address manually. '
        /// </summary>
        public string UINoResultforthepostcoCustomInnerText = "No Result";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaPlusLeadPassengWindow : BrowserWindow
    {
        
        public UIVillaPlusLeadPassengWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Plus | Lead Passenger");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPlusLeadPassengDocument UIVillaPlusLeadPassengDocument
        {
            get
            {
                if ((this.mUIVillaPlusLeadPassengDocument == null))
                {
                    this.mUIVillaPlusLeadPassengDocument = new UIVillaPlusLeadPassengDocument(this);
                }
                return this.mUIVillaPlusLeadPassengDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusLeadPassengDocument mUIVillaPlusLeadPassengDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIVillaPlusLeadPassengDocument : HtmlDocument
    {
        
        public UIVillaPlusLeadPassengDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "book";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/booking/lead-passenger";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/booking/lead-passenger", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus | Lead Passenger");
            #endregion
        }
        
        #region Properties
        public UIPanPostCodeErrorPopUCustom UIPanPostCodeErrorPopUCustom
        {
            get
            {
                if ((this.mUIPanPostCodeErrorPopUCustom == null))
                {
                    this.mUIPanPostCodeErrorPopUCustom = new UIPanPostCodeErrorPopUCustom(this);
                }
                return this.mUIPanPostCodeErrorPopUCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPanPostCodeErrorPopUCustom mUIPanPostCodeErrorPopUCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPanPostCodeErrorPopUCustom : HtmlCustom
    {
        
        public UIPanPostCodeErrorPopUCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "SECTION";
            this.SearchProperties["Id"] = "panPostCodeErrorPopUp";
            this.FilterProperties["Class"] = "lightbox";
            this.FilterProperties["ControlDefinition"] = "class=\"lightbox\" id=\"panPostCodeErrorPop";
            this.WindowTitles.Add("Villa Plus | Lead Passenger");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UINoResultforthepostcoCustom
        {
            get
            {
                if ((this.mUINoResultforthepostcoCustom == null))
                {
                    this.mUINoResultforthepostcoCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUINoResultforthepostcoCustom.SearchProperties["TagName"] = "LI";
                    this.mUINoResultforthepostcoCustom.FilterProperties.Add(new PropertyExpression("InnerText", "No Result", PropertyExpressionOperator.Contains));
                    this.mUINoResultforthepostcoCustom.WindowTitles.Add("Villa Plus | Lead Passenger");
                    #endregion
                }
                return this.mUINoResultforthepostcoCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUINoResultforthepostcoCustom;
        #endregion
    }
}
