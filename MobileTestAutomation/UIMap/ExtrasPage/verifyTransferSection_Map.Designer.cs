// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.ExtrasPage.verifyTransferSection_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    //using MobileTestAutomation.Utility;
    using MobileTestAutomation.UIMap.ExtrasPage.moveTransferSection_MapClasses;
    using MobileTestAutomation.UIMap.ExtrasPage.mouseScrollTransferSection_MapClasses;
    using MobileTestAutomation.UIMap.ExtrasPage.mouseScrollToTransferSection_MapClasses;
    using MobileTestAutomation.UIMap.ExtrasPage.mouseScrollAgainExtrasPage_MapClasses;
    using MobileTestAutomation.UIMap.ExtrasPage.scrollMouseForCheckTransferSelection_MapClasses;


    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class verifyTransferSection_Map : logWriter
    {

        moveTransferSection_Map TransferMove = new moveTransferSection_Map();
        /// <summary>
        /// verifyTransferSection_Method - Use 'verifyTransferSection_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public string verifyTransferSection_Method(Dictionary<string, string> dictionary)
        {

            //Scrolling the mouse to display Transfer Section.
            mouseScrollToTransferSection_Map MouseScroll = new mouseScrollToTransferSection_Map();
            MouseScroll.mouseScrollToTransferSection_Method();

            #region Variable Declarations
            HtmlCustom uISectiontransferCustom = this.UIHolidayExtrasVillaPlWindow.UIHolidayExtrasVillaPlDocument.UISectiontransferCustom;
            #endregion

            //Verifyig the Private Transfer Section.
            HtmlDocument transferDoc = new HtmlDocument(mUIHolidayExtrasVillaPlWindow);

            HtmlDiv TransferInnerData = new HtmlDiv(transferDoc);
            TransferInnerData.SearchProperties[HtmlCustom.PropertyNames.Class] = "transfer-details";
            string BeginData = TransferInnerData.InnerText.ToString();
            string selectedData = string.Empty;
            BeginData = BeginData.Replace("£", string.Empty).Replace(" ", string.Empty).Trim().ToLower();

            while (BeginData != selectedData)
            {
                TransferInnerData.SearchProperties[HtmlCustom.PropertyNames.Class] = "private-transfer content current";
                string PageData = TransferInnerData.InnerText.ToString();
                string TransferPageData = PageData.Replace("£", string.Empty).Replace(" ", string.Empty).Trim().ToLower();

                foreach (KeyValuePair<string, string> TData in dictionary)
                {
                    string temp = TData.Key.ToString();
                    temp = temp.Replace("Private transfer", string.Empty);
                    string ExpectedValue = temp + TData.Value;
                    ExpectedValue = ExpectedValue.Replace(" ", string.Empty).Trim().ToLower();
                    if (ExpectedValue.Contains(TransferPageData))
                    {
                        WriteLogs("PASS : Selected Private Transfer Data is matched with DB : " + PageData);
                    }
                }

                TransferMove.moveTransferSection_Method();

                selectedData = null;
                TransferInnerData.SearchProperties[HtmlDiv.PropertyNames.Class] = "private-transfer content current";
                selectedData = TransferInnerData.InnerText.ToString();
                selectedData = selectedData.Replace("£", string.Empty).Replace(" ", string.Empty).Trim().ToLower();
            }

            //Clicking on the Add Private Transfer Button.
            HtmlCustom TransferButton = new HtmlCustom(transferDoc);
            TransferButton.SearchProperties[HtmlCustom.PropertyNames.Id] = "btnAddTransfer";
            MouseScroll.mouseScrollToTransferSection_Method();

            try
            {
                Mouse.Click(TransferButton);
                WriteLogs("PASS : Click on the \"Add Private Transfer\" Button. : VERIFICATION");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Could Not click on the \"Add Private Transfer\" Button.");
                WriteLogs("----" + ex.Message.ToString());
            }

            //Clicking on the Remove Button
            BrowserWindow win = new BrowserWindow();
            HtmlDocument EditTransferDoc = new HtmlDocument(win.CurrentDocumentWindow);
            HtmlSpan removeButton = new HtmlSpan(EditTransferDoc);
            removeButton.SearchProperties[HtmlSpan.PropertyNames.Id] = "removAll1";
            try
            {
                Mouse.Click(removeButton);
                WriteLogs("PASS : Click on the \"Remove Private Transfer\" Button.");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Could Not click on the \"Remove Transfer\" Button.");
                WriteLogs("----" + ex.Message.ToString());
            }

            //Clicking on the Confirm Private Transfer Button.
            BrowserWindow winT = new BrowserWindow();
            HtmlDocument EditTransferDocT = new HtmlDocument(winT.CurrentDocumentWindow);
            HtmlDiv Temp = new HtmlDiv(EditTransferDocT);
            Temp.SearchProperties[HtmlDiv.PropertyNames.Id] = "dvAddAmendTransfer";
            Temp.SearchProperties[HtmlDiv.PropertyNames.Class] = "wrapper";
            HtmlHyperlink confirmButton = new HtmlHyperlink(Temp);
            confirmButton.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Confirm Private Transfer";
            try
            {
                Mouse.Click(confirmButton);
                WriteLogs("PASS : Clicked \"Confirm Private Transfer\" Button.");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Could Not Click on the \"Confirm Private Transfer\" Button.");
                WriteLogs("----" + ex.Message.ToString());

            }

            //System.Threading.Thread.Sleep(10000);

            mouseScrollAgainExtrasPage_Map MoveTransferAgain = new mouseScrollAgainExtrasPage_Map();
            MoveTransferAgain.mouseScrollAgainExtrasPage_Method();

            //Again Click on the Add Private Transfer Button
            HtmlDocument transferDoc1 = new HtmlDocument(mUIHolidayExtrasVillaPlWindow);
            HtmlCustom againTranferButtonClick = new HtmlCustom(transferDoc1);
            againTranferButtonClick.SearchProperties[HtmlCustom.PropertyNames.Id] = "btnAddTransfer";
            try
            {
                Mouse.Click(againTranferButtonClick);
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Not able to Click again on the Add Transfer Button.");
                WriteLogs("----" + ex.Message.ToString());
            }

            //Changing the Transfer from Airport To Villa
            BrowserWindow winTT = new BrowserWindow();
            HtmlDocument EditTransfer = new HtmlDocument(winTT.CurrentDocumentWindow);
            HtmlDiv clickEditTransferCombo = new HtmlDiv(EditTransfer);
            clickEditTransferCombo.SearchProperties[HtmlDiv.PropertyNames.Id] = "dvAddAmendTransfer";
            HtmlComboBox AToVSelection = new HtmlComboBox(clickEditTransferCombo);
            AToVSelection.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ddlAtoV_0";
            string AirportToVillaSelect = string.Empty;
            if (AToVSelection.Exists)
            {
                if (AToVSelection.ItemCount > 2)
                {
                    AToVSelection.SelectedIndex = (2);
                    WriteLogs("PASS : Changed Airport To Villa Selection Successfully - " + AToVSelection.SelectedItem.ToString());
                    AirportToVillaSelect = "Airport To Villa " + AToVSelection.SelectedItem.ToString();
                }
                else
                {
                    AToVSelection.SelectedIndex = (1);
                    WriteLogs("PASS : Changed Airport To Villa Selection Successfully - " + AToVSelection.SelectedItem.ToString());
                    AirportToVillaSelect = "Airport To Villa " + AToVSelection.SelectedItem.ToString();
                }
            }
            //Displying the Selected Transfer from Airport To Villa.
            string AToVData = string.Empty;
            AToVData = AirportToVillaSelect.Replace(" ", string.Empty);

            //Adding one more Transfer from Airport To Villa
            HtmlSpan addAToVTransfer = new HtmlSpan(clickEditTransferCombo);
            addAToVTransfer.SearchProperties[HtmlSpan.PropertyNames.Class] = "addTransfer";
            try
            {
                Mouse.Click(addAToVTransfer);
                WriteLogs("PASS : Added New Transfer Selection from Airport To Villa.");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Not able to add New Transfer from Airport To Villa.");
                WriteLogs("----" + ex.Message.ToString());
            }

            //Removing the newly added Transfer
            HtmlDiv findClosebutton = new HtmlDiv(clickEditTransferCombo);
            findClosebutton.SearchProperties[HtmlDiv.PropertyNames.Class] = "privateTransferOptions nest";
            HtmlCustom closeT = new HtmlCustom(findClosebutton);
            closeT.SearchProperties[HtmlCustom.PropertyNames.Class] = "lstToVilla";
            HtmlCustom closebutton = new HtmlCustom(closeT);
            closebutton.SearchProperties[HtmlCustom.PropertyNames.Class] = "close";
            HtmlImage removeAToVTransfer = new HtmlImage(closebutton);
            removeAToVTransfer.SearchProperties[HtmlImage.PropertyNames.TagName] = "IMG";
            removeAToVTransfer.SearchProperties[HtmlImage.PropertyNames.Class] = "removeTransfer";
            try
            {
                Mouse.Click(removeAToVTransfer);
                WriteLogs("PASS : Removed Newly added Transfer Selection from Airport To Villa.");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Not able to remove the Newly added Transfer from Airport To Villa.");
                WriteLogs("----" + ex.Message.ToString());
            }

            //Changing the Trasnfer from Villa To Airport
            string VillaToAirportSelect = string.Empty;
            HtmlComboBox VToASelection = new HtmlComboBox(clickEditTransferCombo);
            VToASelection.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ddlVtoA_0";
            if (VToASelection.Exists)
            {
                if (VToASelection.ItemCount > 2)
                {
                    VToASelection.SelectedIndex = (2);
                    WriteLogs("PASS : Changed Villa To Airport Selection Successfully - " + AToVSelection.SelectedItem.ToString());
                    VillaToAirportSelect = "Villa To Airport " + AToVSelection.SelectedItem.ToString();
                }
                else
                {
                    VToASelection.SelectedIndex = (1);
                    WriteLogs("PASS : Changed Villa To Airport Selection Successfully - " + AToVSelection.SelectedItem.ToString());
                    VillaToAirportSelect = "Villa To Airport " + AToVSelection.SelectedItem.ToString();
                }
            }
            //Displying the Selected Transfer from Villa To Airport
            string VToAData = string.Empty;
            VToAData = VillaToAirportSelect.Replace(" ", string.Empty);

            //Adding New Trasfer from Villa To Airport
            HtmlCustom IdenAddButton = new HtmlCustom(clickEditTransferCombo);
            IdenAddButton.SearchProperties[HtmlCustom.PropertyNames.Class] = "lstToAirport";
            HtmlCustom AddButton = new HtmlCustom(IdenAddButton);
            AddButton.SearchProperties[HtmlCustom.PropertyNames.Class] = "open";
            HtmlSpan addVToATransfer = new HtmlSpan(AddButton);
            addVToATransfer.SearchProperties[HtmlSpan.PropertyNames.Class] = "addTransfer";
            try
            {
                Mouse.Click(addVToATransfer);
                WriteLogs("PASS : Added New Transfer Selection from Villa To Airport ");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Not able to add New Transfer from Villa To Airport.");
                WriteLogs("----" + ex.Message.ToString());
            }

            //Removing the added Transfer
            HtmlDiv findClosebuttonVToA = new HtmlDiv(clickEditTransferCombo);
            findClosebutton.SearchProperties[HtmlDiv.PropertyNames.Class] = "privateTransferOptions nest";
            HtmlCustom closeTVToA = new HtmlCustom(findClosebutton);
            closeT.SearchProperties[HtmlCustom.PropertyNames.Class] = "lstToAirport";
            HtmlCustom closebuttonVToA = new HtmlCustom(closeT);
            closebutton.SearchProperties[HtmlCustom.PropertyNames.Class] = "close";
            HtmlImage removeVToATransfer = new HtmlImage(closebutton);
            removeVToATransfer.SearchProperties[HtmlImage.PropertyNames.TagName] = "IMG";
            removeVToATransfer.SearchProperties[HtmlImage.PropertyNames.Class] = "removeTransfer";
            try
            {
                Mouse.Click(removeVToATransfer);
                WriteLogs("PASS : Removed Newly added Transfer Selection from Villa To Airport ");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Not able to remove the Newly added Transfer from Villa To Airport.");
                WriteLogs("----" + ex.Message.ToString());
            }

            //Clicking on the Confirm Private Transfer Button
            HtmlDiv Temp1 = new HtmlDiv(EditTransferDocT);
            Temp1.SearchProperties[HtmlDiv.PropertyNames.Id] = "dvAddAmendTransfer";
            Temp1.SearchProperties[HtmlDiv.PropertyNames.Class] = "wrapper";
            HtmlHyperlink confirmClickButton = new HtmlHyperlink(Temp1);
            confirmClickButton.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Confirm Private Transfer";
            try
            {

                Mouse.Click(confirmClickButton);
                WriteLogs("PASS : Click on the Confirm Private Transfer Button. : VERIFICATION");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Not able to Click on the Confirm Private Transfer Button.");
                WriteLogs("----" + ex.Message.ToString());
            }

            //System.Threading.Thread.Sleep(10000);

            //Scolling the mouse for referring the Transfer Section after Transfer is selected.

            scrollMouseForCheckTransferSelection_Map ScrollTransferCheck = new scrollMouseForCheckTransferSelection_Map();
            ScrollTransferCheck.scrollMouseForCheckTransferSelection_Method();
            
            //Comparing the Selected Transfer and displayed on the Extra Page is matched
            BrowserWindow winExtras = new BrowserWindow();
            HtmlDocument TransferPrice = new HtmlDocument(winExtras.CurrentDocumentWindow);
            //HtmlDiv compareTransferData = new HtmlDiv(TransferPrice);
            //compareTransferData.SearchProperties[HtmlDiv.PropertyNames.Id] = "dvTransfer";
            HtmlCustom findTransferPriceSection = new HtmlCustom(TransferPrice);
            findTransferPriceSection.SearchProperties[HtmlCustom.PropertyNames.Id] = "section-transfer";
            HtmlDiv findTransferSection = new HtmlDiv(findTransferPriceSection);
            findTransferSection.SearchProperties[HtmlDiv.PropertyNames.Class] = "carhire-summary";
            string PageTransferData = string.Empty;
            PageTransferData = findTransferSection.InnerText.ToString();
            PageTransferData = PageTransferData.Replace("people", "pax");
            int PageTransData = PageTransferData.IndexOf("\r\n");
            string pageData = PageTransferData.Substring(PageTransData);
            pageData = pageData.Replace("\r\n", string.Empty).Trim();
            pageData = pageData.Replace(" ", string.Empty);
            pageData = pageData.Replace("-", string.Empty).ToLower();
            string SelectedTransferData = string.Empty;
            SelectedTransferData = AToVData + VToAData;
            SelectedTransferData = SelectedTransferData.Replace("-", "to").ToLower();

            try
            {
                StringAssert.Contains(pageData, SelectedTransferData);
                WriteLogs("PASS : Selected Extra Transfer data is matched with Transfer Data on the Page - " + PageTransferData + ".");
            }

            catch (Exception ex)
            {
                WriteLogs("FAIL : Selected Extra Transfer data is not matched with Transfer Data on the Page.");
                WriteLogs("----" + ex.Message.ToString());
            }

            return pageData;
        }

        #region Properties
        public virtual verifyTransferSection_MethodExpectedValues verifyTransferSection_MethodExpectedValues
        {
            get
            {
                if ((this.mverifyTransferSection_MethodExpectedValues == null))
                {
                    this.mverifyTransferSection_MethodExpectedValues = new verifyTransferSection_MethodExpectedValues();
                }
                return this.mverifyTransferSection_MethodExpectedValues;
            }
        }

        public UIHolidayExtrasVillaPlWindow UIHolidayExtrasVillaPlWindow
        {
            get
            {
                if ((this.mUIHolidayExtrasVillaPlWindow == null))
                {
                    this.mUIHolidayExtrasVillaPlWindow = new UIHolidayExtrasVillaPlWindow();
                }
                return this.mUIHolidayExtrasVillaPlWindow;
            }
        }
        #endregion

        #region Fields
        private verifyTransferSection_MethodExpectedValues mverifyTransferSection_MethodExpectedValues;

        private UIHolidayExtrasVillaPlWindow mUIHolidayExtrasVillaPlWindow;
        #endregion
    }

    /// <summary>
    /// Parameters to be passed into 'verifyTransferSection_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class verifyTransferSection_MethodExpectedValues
    {

        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'section-transfer' custom control contains 'Private Transfers   
        ///
        ///Our private transfers will pick you up from the airport and drop you off directly at the villa. There are no drop-offs on the way and no haggling with the price. We provide a door to door service, so you can relax knowing that everything is taken care of.
        ///
        /// 
        ///
        ///1 - 4 People £85.00 
        ///
        ///
        ///
        ///
        ///1 - 7 People £110.00 
        ///
        ///
        ///
        ///
        ///1 - 12 People £145.00 
        ///
        ///
        /// 
        ///Add Private Transfers'
        /// </summary>
        public string UISectiontransferCustomInnerText = @"Private Transfers   

Our private transfers will pick you up from the airport and drop you off directly at the villa. There are no drop-offs on the way and no haggling with the price. We provide a door to door service, so you can relax knowing that everything is taken care of.

 

1 - 4 People £85.00 




1 - 7 People £110.00 




1 - 12 People £145.00 


 
Add Private Transfers";
        #endregion
    }

    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHolidayExtrasVillaPlWindow : BrowserWindow
    {

        public UIHolidayExtrasVillaPlWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Holiday Extras | Villa Plus";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Holiday Extras | Villa Plus");
            #endregion
        }

        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }

        #region Properties
        public UIHolidayExtrasVillaPlDocument UIHolidayExtrasVillaPlDocument
        {
            get
            {
                if ((this.mUIHolidayExtrasVillaPlDocument == null))
                {
                    this.mUIHolidayExtrasVillaPlDocument = new UIHolidayExtrasVillaPlDocument(this);
                }
                return this.mUIHolidayExtrasVillaPlDocument;
            }
        }
        #endregion

        #region Fields
        private UIHolidayExtrasVillaPlDocument mUIHolidayExtrasVillaPlDocument;
        #endregion
    }

    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHolidayExtrasVillaPlDocument : HtmlDocument
    {

        public UIHolidayExtrasVillaPlDocument(UITestControl searchLimitContainer) :
            base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "book";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Holiday Extras | Villa Plus";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/booking/Extras/ShowExtras", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Holiday Extras | Villa Plus");
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }

        #region Properties
        public HtmlCustom UISectiontransferCustom
        {
            get
            {
                if ((this.mUISectiontransferCustom == null))
                {
                    this.mUISectiontransferCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUISectiontransferCustom.SearchProperties["TagName"] = "SECTION";
                    this.mUISectiontransferCustom.SearchProperties["Id"] = "section-transfer";
                    this.mUISectiontransferCustom.FilterProperties["Class"] = "booking-step last";
                    this.mUISectiontransferCustom.FilterProperties.Add(new PropertyExpression("ControlDefinition", "class=\"booking-step last\"", PropertyExpressionOperator.Contains));
                    this.mUISectiontransferCustom.WindowTitles.Add("Holiday Extras | Villa Plus");
                    this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    #endregion
                }
                return this.mUISectiontransferCustom;
            }
        }
        #endregion

        #region Fields
        private HtmlCustom mUISectiontransferCustom;
        #endregion
    }
}
