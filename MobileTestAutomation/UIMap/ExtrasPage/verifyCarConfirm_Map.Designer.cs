// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.ExtrasPage.verifyCarConfirm_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using MobileTestAutomation.Utility;
    using MobileTestAutomation.UIMap.ExtrasPage.ScrollAmendCarsPageClasses;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class verifyCarConfirm_Map : logWriter
    {

        /// <summary>
        /// verifyCarConfirm_Method
        /// </summary>
        public void verifyCarConfirm_Method(int NumofAdultsSelected)
        {
            #region Variable Declarations
            HtmlCustom uIConfirmCarCustom = this.UIHttpmobstaging1villaWindow1.UIHttpmobstaging1villaDocument.UIConfirmCarCustom;
            HtmlCustom uIBtnAgreeCustom = this.UIHttpmobstaging1villaWindow1.UIHttpmobstaging1villaDocument.UIBtnAgreeCustom;
            #endregion

            if (NumofAdultsSelected > 1)
            {
                //Selecting the Addition Car from Car Extras Section.
                HtmlDocument findCarBu = new HtmlDocument(this.mUIHttpmobstaging1villaWindow1);
                HtmlDiv findCarSec = new HtmlDiv(findCarBu);
                HtmlCustom findAddButSec = new HtmlCustom(findCarSec);
                findAddButSec.SearchProperties[HtmlCustom.PropertyNames.Id] = "dvCarHireList";
                HtmlHyperlink AddCarButton = new HtmlHyperlink(findAddButSec);
                AddCarButton.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "btnAddNewCar";
                try
                {
                    Mouse.Click(AddCarButton);
                    WriteLogs("PASS : Clicked on the \"Additional Car Hire\" Button.");
                }
                catch (Exception ex)
                {
                    WriteLogs("FAIL : Could Not Click the \"Additional Car Hire\" Button ");
                    WriteLogs("----" + ex.Message.ToString());
                }

                //Removing the added Addition Car from Car Extras Section.
                HtmlCustom findremovebut = new HtmlCustom(findCarSec);
                findremovebut.SearchProperties[HtmlCustom.PropertyNames.Id] = "dvCarHireList";
                HtmlCustom findsepcremosection = new HtmlCustom(findremovebut);
                findsepcremosection.SearchProperties[HtmlCustom.PropertyNames.Id] = "caroption_2";
                HtmlDiv findRemoveButton = new HtmlDiv(findsepcremosection);
                findRemoveButton.SearchProperties[HtmlDiv.PropertyNames.Id] = "rmvcar2";
                HtmlSpan clickCloseAddCar = new HtmlSpan(findRemoveButton);
                clickCloseAddCar.SearchProperties[HtmlSpan.PropertyNames.Class] = "btnRemoveAdditional";
                try
                {
                    Mouse.Click(clickCloseAddCar);
                    WriteLogs("PASS : Clicked on the \"Remove\" Button of Additional selected Car.");
                }
                catch (Exception ex)
                {
                    WriteLogs("FAIL : Could Not click on the \"Remove\" Button of Additional selected Car ");
                    WriteLogs("----" + ex.Message.ToString());
                }
            }

            //Clicking on the Confirm Car HIre
            HtmlDocument myDocument = new HtmlDocument(this.mUIHttpmobstaging1villaWindow1);
            HtmlCustom btnConfirmCarHire = new HtmlCustom(myDocument);
            //btnConfirmCarHire.FilterProperties[HtmlCustom.PropertyNames.Class] = "btn bg-green MousePointer";
            btnConfirmCarHire.SearchProperties[HtmlCustom.PropertyNames.Id] = "confirmCar";
            //btnConfirmCarHire.SearchProperties[HtmlCustom.PropertyNames.InnerText] = "Confirm Car Hire";

            ScrollAmendCarsPage ScrollCarsPage = new ScrollAmendCarsPage();
            ScrollCarsPage.ScrollAmendCarsPage_Method();

            try
            {
                Mouse.Click(btnConfirmCarHire);
                WriteLogs("PASS : Clicked on the \"Confirm Car Hire\" Button.");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Could Not click on the \"Confirm Car Hire\" Button ");
                WriteLogs("----" + ex.Message.ToString());
            }

            //Clicking on the Agree Button
            HtmlDocument selectDocument = new HtmlDocument(this.mUIHttpmobstaging1villaWindow1);
            HtmlCustom selectbutton = new HtmlCustom(selectDocument);
            //selectbutton.FilterProperties[HtmlCustom.PropertyNames.Class] = "btn bg-green MousePointer";
            selectbutton.SearchProperties[HtmlCustom.PropertyNames.Id] = "btnAgree";
            //selectbutton.SearchProperties[HtmlCustom.PropertyNames.Id] = "I Agree";

            try
            {
                Mouse.Click(selectbutton);
                WriteLogs("PASS : Clicked on the \"I Agree\" Button.");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Could Not click on the \"I Agree\" Button ");
                WriteLogs("----" + ex.Message.ToString());
            }

        }

        #region Properties
        public UIHttpmobstaging1villaWindow UIHttpmobstaging1villaWindow
        {
            get
            {
                if ((this.mUIHttpmobstaging1villaWindow == null))
                {
                    this.mUIHttpmobstaging1villaWindow = new UIHttpmobstaging1villaWindow();
                }
                return this.mUIHttpmobstaging1villaWindow;
            }
        }

        public UIHttpmobstaging1villaWindow1 UIHttpmobstaging1villaWindow1
        {
            get
            {
                if ((this.mUIHttpmobstaging1villaWindow1 == null))
                {
                    this.mUIHttpmobstaging1villaWindow1 = new UIHttpmobstaging1villaWindow1();
                }
                return this.mUIHttpmobstaging1villaWindow1;

            }
        }
        #endregion

        #region Fields
        private UIHttpmobstaging1villaWindow mUIHttpmobstaging1villaWindow;

        private UIHttpmobstaging1villaWindow1 mUIHttpmobstaging1villaWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIHttpmobstaging1villaWindow : WinWindow
    {
        
        public UIHttpmobstaging1villaWindow()
        {
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHttpmobstaging1villaDocument UIHttpmobstaging1villaDocument
        {
            get
            {
                if ((this.mUIHttpmobstaging1villaDocument == null))
                {
                    this.mUIHttpmobstaging1villaDocument = new UIHttpmobstaging1villaDocument(this);
                }
                return this.mUIHttpmobstaging1villaDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHttpmobstaging1villaDocument mUIHttpmobstaging1villaDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIHttpmobstaging1villaDocument : HtmlDocument
    {
        
        public UIHttpmobstaging1villaDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "book";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/booking/Extras/AddAmendCarHire", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIConfirmCarCustom
        {
            get
            {
                if ((this.mUIConfirmCarCustom == null))
                {
                    this.mUIConfirmCarCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIConfirmCarCustom.SearchProperties.Add(new PropertyExpression("TagName", "A", PropertyExpressionOperator.Contains));
                    this.mUIConfirmCarCustom.SearchProperties.Add(new PropertyExpression("Id", "confirmCar", PropertyExpressionOperator.Contains));
                    this.mUIConfirmCarCustom.FilterProperties["Class"] = "btn bg-green MousePointer";
                    this.mUIConfirmCarCustom.FilterProperties.Add(new PropertyExpression("ControlDefinition", "class=\"btn bg-green MousePointer\" ", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUIConfirmCarCustom;
            }
        }
        
        public HtmlCustom UIBtnAgreeCustom
        {
            get
            {
                if ((this.mUIBtnAgreeCustom == null))
                {
                    this.mUIBtnAgreeCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIBtnAgreeCustom.SearchProperties["TagName"] = "A";
                    this.mUIBtnAgreeCustom.SearchProperties.Add(new PropertyExpression("Id", "btnAgree", PropertyExpressionOperator.Contains));
                    this.mUIBtnAgreeCustom.FilterProperties.Add(new PropertyExpression("Class", "btn bg-green MousePointer", PropertyExpressionOperator.Contains));
                    this.mUIBtnAgreeCustom.FilterProperties.Add(new PropertyExpression("ControlDefinition", "class=\"btn bg-green MousePointer\" ", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUIBtnAgreeCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIConfirmCarCustom;
        
        private HtmlCustom mUIBtnAgreeCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIHttpmobstaging1villaWindow1 : BrowserWindow
    {
        
        public UIHttpmobstaging1villaWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, ".villaplus.com/booking/Extras/AddAmendCarHire", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            //this.WindowTitles.Add("http://mobstaging1.villaplus.com/booking/Extras/AddAmendCarHire");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHttpmobstaging1villaDocument1 UIHttpmobstaging1villaDocument
        {
            get
            {
                if ((this.mUIHttpmobstaging1villaDocument == null))
                {
                    this.mUIHttpmobstaging1villaDocument = new UIHttpmobstaging1villaDocument1(this);
                }
                return this.mUIHttpmobstaging1villaDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHttpmobstaging1villaDocument1 mUIHttpmobstaging1villaDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIHttpmobstaging1villaDocument1 : HtmlDocument
    {
        
        public UIHttpmobstaging1villaDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "book";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/booking/Extras/AddAmendCarHire", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIConfirmCarCustom
        {
            get
            {
                if ((this.mUIConfirmCarCustom == null))
                {
                    this.mUIConfirmCarCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIConfirmCarCustom.SearchProperties.Add(new PropertyExpression("TagName", "A", PropertyExpressionOperator.Contains));
                    this.mUIConfirmCarCustom.SearchProperties.Add(new PropertyExpression("Id", "confirmCar", PropertyExpressionOperator.Contains));
                    this.mUIConfirmCarCustom.FilterProperties.Add(new PropertyExpression("Class", "btn bg-green MousePointer", PropertyExpressionOperator.Contains));
                    this.mUIConfirmCarCustom.FilterProperties.Add(new PropertyExpression("ControlDefinition", "class=\"btn bg-green MousePointer\"", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUIConfirmCarCustom;
            }
        }
        
        public HtmlCustom UIBtnAgreeCustom
        {
            get
            {
                if ((this.mUIBtnAgreeCustom == null))
                {
                    this.mUIBtnAgreeCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIBtnAgreeCustom.SearchProperties.Add(new PropertyExpression("TagName", "A", PropertyExpressionOperator.Contains));
                    this.mUIBtnAgreeCustom.SearchProperties.Add(new PropertyExpression("Id", "btnAgree", PropertyExpressionOperator.Contains));
                    this.mUIBtnAgreeCustom.FilterProperties.Add(new PropertyExpression("Class", "btn bg-green MousePointer", PropertyExpressionOperator.Contains));
                    this.mUIBtnAgreeCustom.FilterProperties.Add(new PropertyExpression("ControlDefinition", "class=\"btn bg-green MousePointer\"", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUIBtnAgreeCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIConfirmCarCustom;
        
        private HtmlCustom mUIBtnAgreeCustom;
        #endregion
    }
}
