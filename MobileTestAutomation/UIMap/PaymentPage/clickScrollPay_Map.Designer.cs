// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MobileTestAutomation.UIMap.PaymentPage.clickScrollPay_MapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class clickScrollPay_Map
    {
        
        /// <summary>
        /// clickScrollPay_Method - Use 'clickScrollPay_MethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void clickScrollPay_Method()
        {
            #region Variable Declarations
            HtmlScrollBar uIItemScrollBar = this.UIVillaPlusPaymentInteWindow.UIVillaPlusPaymentDocument.UIItemScrollBar;
            #endregion
            Mouse.MoveScrollWheel(uIItemScrollBar, 200);
            Keyboard.SendKeys("{PGDN}");
            Keyboard.SendKeys("{END}");
        }

        #region Properties
        public virtual clickScrollPay_MethodExpectedValues clickScrollPay_MethodExpectedValues
        {
            get
            {
                if ((this.mclickScrollPay_MethodExpectedValues == null))
                {
                    this.mclickScrollPay_MethodExpectedValues = new clickScrollPay_MethodExpectedValues();
                }
                return this.mclickScrollPay_MethodExpectedValues;
            }
        }
        
        public UIVillaPlusPaymentInteWindow UIVillaPlusPaymentInteWindow
        {
            get
            {
                if ((this.mUIVillaPlusPaymentInteWindow == null))
                {
                    this.mUIVillaPlusPaymentInteWindow = new UIVillaPlusPaymentInteWindow();
                }
                return this.mUIVillaPlusPaymentInteWindow;
            }
        }
        #endregion
        
        #region Fields
        private clickScrollPay_MethodExpectedValues mclickScrollPay_MethodExpectedValues;
        
        private UIVillaPlusPaymentInteWindow mUIVillaPlusPaymentInteWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'clickScrollPay_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class clickScrollPay_MethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of scroll bar equals 'True'
        /// </summary>
        public bool UIItemScrollBarExists = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVillaPlusPaymentInteWindow : BrowserWindow
    {
        
        public UIVillaPlusPaymentInteWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Villa Plus", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Villa Plus | Payment");
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }

        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVillaPlusPaymentDocument UIVillaPlusPaymentDocument
        {
            get
            {
                if ((this.mUIVillaPlusPaymentDocument == null))
                {
                    this.mUIVillaPlusPaymentDocument = new UIVillaPlusPaymentDocument(this);
                }
                return this.mUIVillaPlusPaymentDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIVillaPlusPaymentDocument mUIVillaPlusPaymentDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVillaPlusPaymentDocument : HtmlDocument
    {
        
        public UIVillaPlusPaymentDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "book";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Villa Plus", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.AbsolutePath, "/booking/payment", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".villaplus.com/booking/payment", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Villa Plus | Payment");
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }

        #region Properties
        public HtmlScrollBar UIItemScrollBar
        {
            get
            {
                if ((this.mUIItemScrollBar == null))
                {
                    this.mUIItemScrollBar = new HtmlScrollBar(this);
                    #region Search Criteria
                    this.mUIItemScrollBar.SearchProperties[HtmlScrollBar.PropertyNames.Orientation] = "Vertical";
                    this.mUIItemScrollBar.WindowTitles.Add("Villa Plus | Payment");
                    this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    #endregion
                }
                return this.mUIItemScrollBar;
            }
        }
        #endregion
        
        #region Fields
        private HtmlScrollBar mUIItemScrollBar;
        #endregion
    }
}
